      SUBROUTINE G1TRAN(INBUFR,ISTART,IEND)
C
C          ------------------------------------------------
C          ROUTINE NO. (1003)   VERSION (A8.1H9)  23:SEP:92
C          ------------------------------------------------
C
C          THIS CONVERTS PAIRS OF VALUES IN THE INPUT BUFFER
C          INTO CODES SUITABLE FOR DRIVING THE OUTPUT DEVICE.
C          (THIS VERSION IS FOR HP-GL/2).
C          (THIS IS FOR A SPOOLED OR OFFLINE PLOTTER WITH FRAME ADVANCE).
C
C
C          THE FUNCTIONS SUPPORTED HERE (GIVEN BY
C          THE X-VALUE OF ANY PAIR) ARE AS FOLLOWS:
C
C          =  -1, PLOT (AT THE CURRENT POSITION) A POINT,
C          =  -2, DRAW (AT THE CURRENT POS.) CHAR. <IYVAL>,
C              .
C          = -11, SET HARDWARE CHARACTER SIZE      <IYVAL>,
C          = -12, SET HARDWARE CHARACTER ANGLE     <IYVAL>,
C          = -13, SET HARDWARE CHARACTER ITALIC    <IYVAL>,
C          = -14, SET HARDWARE CHARACTER OBLATE    <IYVAL>,
C              .
C          = -17, SET COLOUR NUMBER                <IYVAL>,
C          = -18, FILL POLYGON                     <IYVAL>,
C              .
C          = -20, BEGIN FILLED-AREA BOUNDARY       <IYVAL>,
C          = -21, SET PLOT ORIENTATION             <IYVAL>,
C          = -22, SET PEN VELOCITY                 <IYVAL>,
C              .
C          = -40, PASS DATA DIRECTLY TO THE DEVICE <IDATA>,
C          = -41, SET A COLOUR TABLE ENTRY         <IDATA>,
C          = -42, DEFINE HARDWARE LINE TYPE        <IDATA>,
C              .
C          = -44, SET PARAMETERS FOR CROSS HATCHING,
C              .
C          = -81, ERASE THE DEVICE WITH PROMPT/WAIT,
C          = -82, ERASE THE DEVICE WITHOUT PROMPT/WAIT,
C              .
C          = -84, CLEAR THE SYSTEM BUFFER,
C          = -85, END GRAPHICAL OUTPUT.
C
C
      INTEGER   IBYTE(7),ICODES(18),INBUFR(IEND),IPLOFF(1),IDUMMY(1)
      INTEGER   KPAGE(4)
      LOGICAL   REAL
      LOGICAL   BOUND,DOWN
C
      COMMON /T1DLIM/ DLIMX,DLIMY
      COMMON /T1DRES/ DRESX,DRESY
      COMMON /T1FLBF/ IXSAVE(1000),IYSAVE(1000),ISAVSZ,INDSAV
      COMMON /T1FLSV/ BOUND
      COMMON /T1FUND/ NUMFUN,LENARG
      COMMON /T1H1AA/ IXPLOT,IYPLOT,IXMSAV,IYMSAV,NCMND,DOWN
      COMMON /T1H9BB/ IHIGHT,ZOBLAT,CHRANG,ISLANT,KOLOUR,KOLNUM,
     &                INTRED,IXCHDS,IYCHDS,IXCHMV,IYCHMV
      COMMON /T1HTCH/ IHTCHP(11,2)
      COMMON /T1IOBF/ ICODEB(512),ISIZEB,INDXB,INITXB
      COMMON /T1KDEF/ KOLLID,KOLBAD,MAXCLS
      COMMON /T1LAND/ LNDSCP
      COMMON /T3CONS/ PI
C
      DATA IDUMMY /  0/, IETX   /  3/, ICOMMA / 44/,
     &     MINUS  / 45/, IPOINT / 46/, IZERO  / 48/, ISCOLN / 59/,
     &     LETTRA / 65/, LETTRB / 66/, LETTRC / 67/, LETTRD / 68/,
     &     LETTRE / 69/, LETTRF / 70/, LETTRG / 71/, LETTRI / 73/,
     &     LETTRL / 76/, LETTRM / 77/, LETTRP / 80/, LETTRR / 82/,
     &     LETTRS / 83/, LETTRT / 84/, LETTRU / 85/, LETTRV / 86/,
     &     IHTCOL /  2/, IHTYPE / 11/,
     &     IPLOFF / 59/, SCALIN /0.08846/
      DATA KPAGE /27,37,48,65/
C
C
C          EACH PAIR OF VALUES IS TAKEN IN TURN FROM THE
C          SUPPLIED BUFFER, THE REQUIRED ACTION IS DECODED,
C          THEN THE APPROPRIATE COMMANDS FOR THE PLOTTER
C          ARE STORED IN AN OUTPUT BUFFER, WHICH IS EMPTIED
C          (THE CONTENTS BEING TRANSMITTED) WHEN FULL.
C
C          IF <LENARG> IS NON-ZERO, A FUNCTION IS STILL ACTIVE.
C          THE BUFFER PAIR IS THEN PASSED ON DIRECTLY TO THE
C          RELEVANT FUNCTION. OTHERWISE, IF <IXVAL> < 0, A
C          NEW FUNCTION IS REQUIRED, OR IF <IXVAL> > 0, A
C          VECTOR (VISIBLE OR INVISIBLE) IS REQUIRED INSTEAD.
C
        DO 100 IPAIR= ISTART,IEND,2
        IXVAL= INBUFR(IPAIR)
        IYVAL= INBUFR(IPAIR+1)
        IF (LENARG.GT.0) GO TO 41
        IF (IXVAL.LT.0)  GO TO 2
        IF (BOUND) GO TO 33
C
C          THE FIRST PART PROVIDES VECTOR DRAWING. IF
C          <IYVAL> < 0, THE LINE IS NOT VISIBLE, AND THE
C          Y-VALUE HAS TO BE APPROPRIATELY READJUSTED.
C
        IF (IYVAL.GE.0) GO TO 1
C
        IXMSAV= IXVAL
        IYMSAV= -IYVAL-1
        GO TO 100
C
    1   CALL G1VECT(IXVAL,IYVAL,1)
        GO TO 100
C
C          THE REMAINDER OF THE ROUTINE IS FOR SPECIAL FUNCTIONS.
C          THE FUNCTION TYPE IS DETERMINED BY <IXVAL> AS FOLLOWS:
C
C          IF <IXVAL>= -1, A POINT IS PLOTTED.
C
    2   IF (IXVAL.NE.-1) GO TO 3
C
        CALL G1VECT(IXMSAV  ,IYMSAV+1,1)
        CALL G1VECT(IXMSAV-1,IYMSAV-1,1)
        CALL G1VECT(IXMSAV+1,IYMSAV-1,1)
        CALL G1VECT(IXMSAV+1,IYMSAV+1,1)
        CALL G1VECT(IXMSAV-1,IYMSAV+1,1)
        CALL G1VECT(IXMSAV  ,IYMSAV-1,1)
        GO TO 100
C
C          IF <IXVAL>= -2, A HARDWARE CHARACTER IS DRAWN
C          AFTER THE POSITION HAS BEEN SET PREVIOUSLY.
C
    3   IF (IXVAL.NE.-2) GO TO 6
C
C          OFFSETS ARE SET TO POSITION THE CHARACTER PROPERLY.
C
        ISAVXM= IXMSAV
        ISAVYM= IYMSAV
        IXPOS= IXMSAV-IXCHDS
        IYPOS= IYMSAV-IYCHDS
        CALL G1VECT(IXPOS,IYPOS,3)
        ICODES(1)= ISCOLN
        ICODES(2)= LETTRL
        ICODES(3)= LETTRB
        ICODES(4)= IYVAL
        ICODES(5)= IETX
        CALL G1BUFF(ICODES,5)
        IXPLOT= IXPLOT+IXCHMV
        IYPLOT= IYPLOT+IYCHMV
C
C          AFTER DRAWING A CHARACTER, AN ABSOLUTE
C          POSITION IS REESTABLISHED.
C
        ICODES(2)= LETTRP
        ICODES(3)= LETTRA
        INDEX= 3
        IVCTOR= IXPLOT
        REAL= .FALSE.
        IFROM= 1
        GO TO 63
C
    4   INDEX= INDEX+1
        ICODES(INDEX)= ICOMMA
        IVCTOR= IYPLOT
        IFROM= 2
        GO TO 63
C
    5   CALL G1BUFF(ICODES,INDEX)
        NCMND= 0
        IXMSAV= ISAVXM
        IYMSAV= ISAVYM
        GO TO 100
C
C          IF <IXVAL>= -11, HARDWARE CHARACTER SIZE IS SET.
C
    6   IF (IXVAL.NE.-11) GO TO 7
C
        IHIGHT= IYVAL
        GO TO 13
C
C          IF <IXVAL>= -12, HARDWARE CHARACTER ROTATION IS SET.
C
    7   IF (IXVAL.NE.-12) GO TO 10
C
        CHRANG= IYVAL*PI/180.0
        ICODES(1)= ISCOLN
        ICODES(2)= LETTRD
        ICODES(3)= LETTRI
        INDEX= 3
        RVCTOR= COS(CHRANG)*5.0
        REAL= .TRUE.
        IFROM= 3
        GO TO 62
C
    8   INDEX= INDEX+1
        ICODES(INDEX)= ICOMMA
        RVCTOR= SIN(CHRANG)*5.0
        IFROM= 4
        GO TO 62
C
    9   CALL G1BUFF(ICODES,INDEX)
        GO TO 16
C
C
C          IF <IXVAL>= -13, HARDWARE CHAR. ITALIC IS SET.
C
   10   IF (IXVAL.NE.-13) GO TO 12
C
        ISLANT= IYVAL
        ICODES(1)= ISCOLN
        ICODES(2)= LETTRS
        ICODES(3)= LETTRL
        ICODES(4)= IZERO
        INDEX= 4
        IF (ISLANT.EQ.0) GO TO 11
C
        ICODES(5)= IPOINT
        ICODES(6)= IZERO+2
        ICODES(7)= IZERO+5
        INDEX= 7
   11   CALL G1BUFF(ICODES,INDEX)
        GO TO 16
C
C          IF <IXVAL>= -14, HARDWARE CHAR. OBLATENESS IS SET.
C
   12   IF (IXVAL.NE.-14) GO TO 17
C
        ZOBLAT= IYVAL/1000.0
   13   CHIGHT= IHIGHT*100.0/DRESY
        WIDTH= CHIGHT*ZOBLAT*0.571429/DLIMX
        ICODES(1)= ISCOLN
        ICODES(2)= LETTRS
        ICODES(3)= LETTRR
        INDEX= 3
        RVCTOR= WIDTH
        REAL= .TRUE.
        IFROM= 5
        GO TO 62
C
   14   INDEX= INDEX+1
        ICODES(INDEX)= ICOMMA
        RVCTOR= CHIGHT
        IFROM= 6
        GO TO 62
C
   15   CALL G1BUFF(ICODES,INDEX)
   16   XCHDS= IHIGHT*(ZOBLAT*0.285714+ISLANT*0.0714286)
        YCHDS= IHIGHT*0.285714
        IXCHDS= XCHDS*COS(CHRANG)-YCHDS*SIN(CHRANG)
        IYCHDS= XCHDS*SIN(CHRANG)+YCHDS*COS(CHRANG)
        IXCHMV= IHIGHT*ZOBLAT*COS(CHRANG)*0.857143
        IYCHMV= IHIGHT*ZOBLAT*SIN(CHRANG)*0.857143
        NCMND= 0
        GO TO 100
C
C          IF <IXVAL>= -15, A HARDWARE BROKEN LINE IS SET.
C          (IT IS NOT IMPLEMENTED IN THIS VERSION).
C
   17   IF (IXVAL.NE.-15) GO TO 18
        GO TO 100
C
C          IF <IXVAL>= -16, HARDWARE INTENSITY IS SET.
C          (IT IS NOT IMPLEMENTED IN THIS VERSION).
C
   18   IF (IXVAL.NE.-16) GO TO 19
        GO TO 100
C
C          IF <IXVAL>= -17, THE COLOUR NUMBER IS SET.
C
   19   IF (IXVAL.NE.-17) GO TO 22
        IF (IYVAL.EQ.KOLOUR) GO TO 100
C
        IFROM1= 1
        KOLOUR= IYVAL
   20   IF (KOLOUR.EQ.KOLBAD) GO TO (100,26,28,30,55,56),IFROM1
C
        KOL= KOLOUR
        IF (KOL.GT.KOLBAD) KOL= KOL-1
C
        ICODES(1)= ISCOLN
        ICODES(2)= LETTRP
        ICODES(3)= LETTRU
        ICODES(4)= ISCOLN
        ICODES(5)= LETTRS
        ICODES(6)= LETTRP
        INDEX= 6
        IVCTOR= KOL
        REAL= .FALSE.
        IFROM= 7
        GO TO 63
C
   21   CALL G1BUFF(ICODES,INDEX)
        NCMND= 0
        DOWN= .FALSE.
        GO TO (100,26,28,30,55,56),IFROM1
C
C          IF <IXVAL>= -18, A POLYGON FILL IS DONE.
C
   22   IF (IXVAL.NE.-18) GO TO 31
        IF (INDSAV.GT.0) GO TO 23
C
        BOUND= .FALSE.
        GO TO 100
C
C          THIS PART CLOSES THE BOUNDARY IF IT IS OPEN.
C
   23   IF (IXSAVE(1).EQ.IXSAVE(INDSAV).AND.
     &      IYSAVE(1).EQ.IYSAVE(INDSAV)) GO TO 24
C
        CALL G1DISC(IXSAVE(1),IYSAVE(1))
   24   IF (IHTCHP(IHTYPE,2).NE.0) GO TO 25
C
C          THIS SECTION IS FOR SOLID AREA-FILL
C
        CALL G1VECT(IXSAVE(1),IYSAVE(1),3)
        ICODES(1)= ISCOLN
        ICODES(2)= LETTRP
        ICODES(3)= LETTRM
        ICODES(4)= IZERO
        CALL G1BUFF(ICODES,4)
        NCMND= 0
C
        DO 200 INDOUT= 2,INDSAV
          CALL G1VECT(IXSAVE(INDOUT),IYSAVE(INDOUT),2)
  200   CONTINUE
C
        ICODES(4)= IZERO+2
        ICODES(5)= LETTRF
        ICODES(6)= LETTRP
        ICODES(7)= LETTRE
        ICODES(8)= LETTRP
        CALL G1BUFF(ICODES,8)
        NCMND= 0
        CALL G1VECT(IXSAVE(INDSAV),IYSAVE(INDSAV),3)
        GO TO 30
C
   25   IF (IHTCHP(IHTYPE,1).LE.0) GO TO 30
C
C          THIS SECTION IS FOR CROSS-HATCHING.
C
        KOLSAV= KOLOUR
        IF (MOD(IHTCHP(IHTYPE,1),2).NE.1) GO TO 27
        IF (KOLOUR.EQ.IHTCHP(IHTCOL,1)) GO TO 26
C
        IFROM1= 2
        KOLOUR= IHTCHP(IHTCOL,1)
        GO TO 20
C
   26   CALL G1SHAD(1)
   27   IF (IHTCHP(IHTYPE,1)/2.NE.1) GO TO 29
        IF (KOLOUR.EQ.IHTCHP(IHTCOL,2)) GO TO 28
C
        IFROM1= 3
        KOLOUR= IHTCHP(IHTCOL,2)
        GO TO 20
C
   28   CALL G1SHAD(2)
   29   IF (KOLOUR.EQ.KOLSAV) GO TO 30
C
        IFROM1= 4
        KOLOUR= KOLSAV
        GO TO 20
C
   30   BOUND= .FALSE.
        GO TO 100
C
C          IF <IXVAL>= -19, DEVICE RESOLUTION IS SET.
C          (IT IS NOT IMPLEMENTED IN THIS VERSION).
C
   31   IF (IXVAL.NE.-19) GO TO 32
        GO TO 100
C
C          IF <IXVAL>= -20, A FILLED AREA BOUNDARY IS BEGUN.
C
   32   IF (IXVAL.NE.-20) GO TO 36
        IF (IYVAL.GT.0) IHTCHP(IHTYPE,2)= 0
C
        BOUND= .TRUE.
        INDSAV= 0
        GO TO 100
C
   33   IF (IYVAL.GE.0) GO TO 34
C
        IYVAL= -IYVAL-1
        IF (INDSAV.EQ.0) GO TO 35
C
        CALL G1DISC(IXVAL,IYVAL)
        GO TO 100
C
C          IF THE BOUNDARY STARTS WITH A JOIN,
C          THE CURRENT POSITION IS SAVED FIRST.
C
   34   IF (INDSAV.GT.0) GO TO 35
C
        INDSAV= 1
        IXSAVE(1)= IXMSAV
        IYSAVE(1)= IYMSAV
   35   IF (INDSAV+3.GE.ISAVSZ) GO TO 100
C
        INDSAV= INDSAV+1
        IXSAVE(INDSAV)= IXVAL
        IYSAVE(INDSAV)= IYVAL
        GO TO 100
C
C          IF <IXVAL>= -21, PLOT ORIENTATION IS SET.
C
   36   IF (IXVAL.NE.-21) GO TO 37
        IF (IYVAL.EQ.LNDSCP) GO TO 100
C
C          SWAP ALL RELEVANT VALUES
C
        LNDSCP= IYVAL
        DLMTMP= DLIMX
        DLIMX= DLIMY
        DLIMY= DLMTMP
        IXPLOT= DLIMX*DRESX
        IYPLOT= 0
        GO TO 100
C
C          IF <IXVAL>= -22, PEN VELOCITY IS SET.
C
   37   IF (IXVAL.NE.-22) GO TO 39
C
        ICODES(1)= ISCOLN
        ICODES(2)= LETTRV
        ICODES(3)= LETTRS
        INDEX= 3
        RVCTOR= IYVAL*0.38
        REAL= .TRUE.
        IFROM= 8
        GO TO 62
C
   38   CALL G1BUFF(ICODES,INDEX)
        GO TO 100
C
C          FUNCTION CODES -23 TO -39 ARE NOT YET DEFINED,
C          AND ARE RESERVED FOR FUTURE NON-ARGUMENT FUNCTIONS.
C
   39   IF (IXVAL.LE.-40) GO TO 40
        GO TO 100
C
C          FUNCTION CODES -40 TO -80 ARE ARGUMENT FUNCTIONS.
C          -<IYVAL> GIVES THE LENGTH OF THE ARGUMENT STRING.
C          <NUMFUN> STORES THE FUNCTION CODE CURRENTLY ACTIVE.
C
   40   IF (IXVAL.LT.-80) GO TO 52
C
        NUMFUN= IXVAL
        LENARG= -IYVAL
        GO TO 100
C
C          THIS SECTION DEALS WITH ARGUMENT-FUNCTIONS.
C          NOTE THAT <NUMFUN> IS USED INSTEAD OF <IXVAL>.
C
   41   LENARG= LENARG-1
C
C          IF <NUMFUN>= -40, DATA IS PASSED ON TRANSPARENTLY.
C
        IF (NUMFUN.NE.-40) GO TO 42
C
        ICODES(1)= IXVAL
        ICODES(2)= IYVAL
        CALL G1BUFF(ICODES,2)
        GO TO 100
C
C          IF <NUMFUN>= -41, A COLOUR TABLE ENTRY IS SET.
C
   42   IF (NUMFUN.NE.-41) GO TO 48
        IF (LENARG.EQ.0) GO TO 43
C
        KOLNUM= IXVAL
        INTRED= IYVAL
        GO TO 100
C
   43   IF (KOLNUM.EQ.KOLBAD) GO TO 100
        IF (KOLNUM.GT.KOLBAD) KOLNUM= KOLNUM-1
C
        ICODES(1)= ISCOLN
        ICODES(2)= LETTRP
        ICODES(3)= LETTRC
        INDEX= 3
        REAL= .FALSE.
        IVCTOR= KOLNUM
        IFROM= 9
        GO TO 63
C
   44   INDEX= INDEX+1
        ICODES(INDEX)= ICOMMA
        IVCTOR= INTRED
        IFROM= 10
        GO TO 63
C
   45   INDEX= INDEX+1
        ICODES(INDEX)= ICOMMA
        IVCTOR= IXVAL
        IFROM= 11
        GO TO 63
C
   46   INDEX= INDEX+1
        ICODES(INDEX)= ICOMMA
        IVCTOR= IYVAL
        IFROM= 12
        GO TO 63
C
   47   CALL G1BUFF(ICODES,INDEX)
        NCMND= 0
        GO TO 100
C
C          IF <NUMFUN>= -42, HARDWARE LINE TYPE IS SET.
C
   48   IF (NUMFUN.NE.-42) GO TO 50
C
        ICODES(1)= ISCOLN
        ICODES(2)= LETTRL
        ICODES(3)= LETTRT
        INDEX= 3
        IF (IXVAL.EQ.0) GO TO 49
C
        ICODES(4)= IZERO+IXVAL
        ICODES(5)= ICOMMA
        INDEX= 5
        REAL= .TRUE.
        RVCTOR= IYVAL*SCALIN
        IFROM= 13
        GO TO 62
C
   49   CALL G1BUFF(ICODES,INDEX)
        NCMND= 0
        GO TO 100
C
C          IF <NUMFUN>= -43, BACKGROUND COLOUR IS SET.
C          (IT IS NOT IMPLEMENTED IN THIS VERSION).
C
   50   IF (NUMFUN.NE.-43) GO TO 51
        GO TO 100
C
C          IF <NUMFUN>= -44, SET HATCHING PARAMETERS.
C
   51   IF (NUMFUN.NE.-44) GO TO 100
C
        IHATPT= 11-LENARG
        IHTCHP(IHATPT,1)= IXVAL
        IHTCHP(IHATPT,2)= IYVAL
        GO TO 100
C
C          FOR FUNCTION CODES <= -81, THE LINE BUFFER IS
C          EMPTIED IMMEDIATELY, THEN THE FUNCTION IS DONE.
C
   52   CALL G1BUFF(IPLOFF,1)
        IF (INDXB.GT.INITXB) CALL G1DVIO(3,ICODEB,INDXB-1)
C
        INDXB= INITXB
        NCMND= 1
C
C          IF <IXVAL>= -81, AN ERASE WITH PROMPT IS DONE.
C          (THIS IS DONE IN THE SAME WAY AS THE NEXT ERASE).
C
        IF (IXVAL.NE.-81) GO TO 53
        GO TO 54
C
C          IF <IXVAL>= -82, AN ERASE WITHOUT PROMPT IS DONE.
C
   53   IF (IXVAL.NE.-82) GO TO 57
   54   IF (IXPLOT.LT.0) GO TO 100
C
        KOLSAV= KOLOUR
        IFROM1= 5
        KOLOUR= 0
        GO TO 20
C
   55   ICODES(1)= ISCOLN
        ICODES(2)= LETTRP
        ICODES(3)= LETTRG
        CALL G1BUFF(ICODES,3)
        CALL G1BUFF(IPLOFF,1)
        CALL G1DVIO(3,ICODEB,INDXB-1)
        INDXB= INITXB
        IFROM1= 6
        KOLOUR= KOLSAV
        GO TO 20
C
   56   ICODES(1)= ISCOLN
        ICODES(2)= LETTRP
        ICODES(3)= LETTRA
        ICODES(4)= IZERO
        ICODES(5)= ICOMMA
        ICODES(6)= IZERO
        ICODES(7)= ISCOLN
        ICODES(8)= LETTRP
        ICODES(9)= LETTRR
        CALL G1BUFF(ICODES,9)
        IXPLOT= 0
        IYPLOT= 0
        IF (LNDSCP.NE.0) IXPLOT= DLIMX*DRESX
        GO TO 100
C
C          IF <IXVAL>= -83, THE CURSOR IS DISPLAYED.
C          (IT IS NOT IMPLEMENTED IN THIS VERSION).
C
   57   IF (IXVAL.NE.-83) GO TO 58
        GO TO 100
C
C          IF <IXVAL>= -84, THE BUFFER IS CLEARED
C          WITHOUT ANY ADDITIONAL ACTION BEING TAKEN.
C
   58   IF (IXVAL.NE.-84) GO TO 59
        GO TO 100
C
C          IF <IXVAL>= -85, GRAPHICAL OUTPUT IS ENDED.
C
   59   IF (IXVAL.NE.-85) GO TO 60
C
        CALL G1DVIO(3,KPAGE,4)
        CALL G1DVIO(2,IDUMMY,1)
        GO TO 100
C
C          IF <IXVAL>= -86, THE REQUIRED CHANNEL IS OPENED.
C          (IT IS NOT IMPLEMENTED IN THIS VERSION).
C
   60   IF (IXVAL.NE.-86) GO TO 61
        GO TO 100
C
C          IF <IXVAL>= -87, THE REQUIRED CHANNEL IS CLOSED.
C          (IT IS NOT IMPLEMENTED IN THIS VERSION).
C
   61   IF (IXVAL.NE.-87) GO TO 100
        GO TO 100
C
C          THIS IS AN INTERNAL SUBROUTINE TO CALCULATE THE PLOT
C          CODES FOR A VECTOR AND PUT THEM IN THE OUTPUT BUFFER.
C
   62   IVCTOR= RVCTOR*10000.0+0.5
   63   IF (IVCTOR.GE.0) GO TO 64
C
        INDEX= INDEX+1
        ICODES(INDEX)= MINUS
        IVCTOR= -IVCTOR
C
C          THE APPROPRIATE SEVEN BYTES ARE CALCULATED (LOW -> HIGH
C          ORDER) AND PLACED IN THE BUFFER IN HIGH -> LOW ORDER.
C
   64   DO 300 I= 1,7
          IF (.NOT.REAL.OR.I.NE.5) GO TO 65
C
          IBYTE(5)= -2
          GO TO 300
C
   65     IDIVSN= IVCTOR/10
          IBYTE(I)= IVCTOR-IDIVSN*10
          INDXBT= I
          IVCTOR= IDIVSN
          IF (REAL.AND.I.LT.6) GO TO 300
          IF (IDIVSN.EQ.0) GO TO 66
  300   CONTINUE
C
   66   DO 400 I= 1,INDXBT
          IPOS1= INDEX+I
          IPOS2= INDXBT-I+1
          ICODES(IPOS1)= IBYTE(IPOS2)+IZERO
  400   CONTINUE
C
        INDEX= INDEX+INDXBT
C
C          CONTROL ALWAYS RETURNS TO THE ORIGINATING SECTION.
C
        GO TO (4,5,8,9,14,15,21,38,44,45,46,47,49),IFROM
  100 CONTINUE
C
      RETURN
      END

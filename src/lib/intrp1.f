      SUBROUTINE INTRP1(XPOSNS,YPOSNS,ZPOSNS,NPNTS,XPOS,YPOS,
     &                  RADIUS,TOL,VALUE,IREPLY)
C
C          ------------------------------------------------
C          ROUTINE NO. ( 129)   VERSION (A7.1)    11:FEB:85
C          ------------------------------------------------
C
C          THIS ESTIMATES THE HEIGHT AT A GIVEN POINT OF A SURFACE
C          DEFINED BY A SET OF HEIGHTS AT ARBITRARY X-Y POSITIONS.
C
C
C          THE ARGUMENTS ARE AS FOLLOWS:
C
C          [XPOSNS] THE SET OF SURFACE POINT X-COORDINATES,
C          [YPOSNS] THE SET OF SURFACE POINT Y-COORDINATES,
C          [ZPOSNS] THE SET OF SURFACE POINT Z-COORDINATES,
C          <NPNTS>  THE NUMBER OF DATA POINTS PROVIDED (AND THE
C                   MIN. SIZE OF EACH OF THE PRECEDING ARRAYS),
C          <XPOS>   THE INTERPOLATION POINT X-COORDINATE,
C          <YPOS>   THE INTERPOLATION POINT Y-COORDINATE,
C          <RADIUS> THE RADIUS OF ACCEPTANCE OF DATA POINTS,
C          <TOL>    THE CAPTURE RADIUS OF A SINGLE DATA POINT,
C          <VALUE>  THE (RETURNED) ESTIMATED HEIGHT VALUE,
C          <IREPLY> THE (RETURNED) REPLY CODE:
C                   = 0, THE INTERPOLATION VALUE IS VALID,
C                   = 1, THE INTERPOLATION WAS UNSUCCESSFUL.
C
C
C          THE SURFACE IS APPROXIMATED BY A SECOND-DEGREE POLYNOMIAL
C
C          P(U,V)= C1*(U*U+V*V) + C2*U + C3*V + C4
C
C          WHERE U= X-XPOS, V= Y-YPOS. THE REQUIRED SURFACE HEIGHT AT
C          (XPOS,YPOS) IS THEN GIVEN BY THE VALUE OF THE POLYNOMIAL
C          AT THAT POINT, NAMELY C4. THE COEFFICIENTS C1..C4 ARE
C          FOUND BY A DISTANCE-WEIGHTED LEAST-SQUARES FIT TO ALL
C          DATA POINTS WITHIN A GIVEN RADIUS OF (XPOS,YPOS). THE
C          LEAST-SQUARES CALCULATION IS ACHIEVED BY MEANS OF A QR-
C          FACTORISATION OF THE DATA MATRIX USING FAST GIVENS-
C          TRANSFORMATIONS. WITH THIS METHOD EACH ROW OF THE DATA
C          MATRIX IS CREATED AND TRANSFORMED IN TURN; THERE IS NO
C          NEED TO STORE THE FULL MATRIX. IF THE POSITION (XPOS,YPOS)
C          IS WITHIN A CAPTURE RADIUS OF ONE OF THE DATA POINTS,
C          THE HEIGHT VALUE OF THAT DATA POINT IS USED DIRECTLY.
C
C          REFERENCES:
C
C          K.J. FALCONER 'A GENERAL PURPOSE ALGORITHM FOR CONTOURING
C          OVER SCATTERED DATA POINTS' NPL REPORT DNAC6 (1971).
C
C          D.H. MCLAIN 'DRAWING CONTOURS FROM ARBITRARY DATA POINTS'
C          COMPUTER JOURNAL, VOL. 17, PAGE 318 (1974).
C
C          J.H. WILKINSON 'NUMERICAL LINEAR ALGEBRA',
C          IN 'STATE OF THE ART IN NUMERICAL ANALYSIS'
C          EDITOR D.A.H. JACOBS, ACADEMIC PRESS (1977).
C
C
      REAL    XPOSNS(NPNTS),YPOSNS(NPNTS),ZPOSNS(NPNTS),RSCALE(4),
     &        TRIANG(14),WORK(5)
C
      COMMON /T3LIMS/ IMAXI,RMAXI,RMINI
C
C
C          <CRMIN> IS A MACHINE-DEPENDENT CONSTANT WHICH IS SET
C          TO 100 TIMES THE SMALLEST REPRESENTABLE REAL NUMBER.
C
      CRMIN= 100.0*RMINI
C
C          THE VARIABLE <NUSED> COUNTS THE NUMBER OF DATA
C          POINTS INCLUDED IN THE LEAST-SQUARES CALCULATION.
C
      NUSED= 0
      RADSQ= RADIUS*RADIUS
      TOLSQ= TOL*TOL
C
C          THE MAJOR LOOP BEGINS HERE. EACH DATA POINT IS EXAMINED
C          IN TURN AND IF ITS POSITION IS LESS THAN <RADIUS> FROM THE
C          INTERPOLATION POINT, IT IS INCLUDED IN THE CALCULATION.
C          THE CORRESPONDING ROW OF THE DATA MATRIX IS FORMED IN
C          [WORK], AND THEN TRANSFORMED USING A SEQUENCE OF
C          GIVENS-ROTATIONS. THE FACTOR 'Q' OF THE QR-TRANSFORMATION
C          IS NOT STORED, BUT THE UPPER TRIANGULAR MATRIX 'R' IS
C          BUILT UP IN THE ONE-DIMENSIONAL ARRAY [TRIANG]. THE SCALE
C          FACTORS FOR THE ROWS OF [TRIANG] ARE STORED IN [RSCALE].
C
      DO 100 ISCAN= 1,NPNTS
        XDIFF= XPOSNS(ISCAN)-XPOS
        YDIFF= YPOSNS(ISCAN)-YPOS
        DISTSQ= XDIFF*XDIFF+YDIFF*YDIFF
        IF (DISTSQ.GE.RADSQ) GO TO 100
C
C          IF THE DATA POINT IS LESS THAN <TOL> FROM (<XPOS>,<YPOS>),
C          THE CORRESPONDING HEIGHT VALUE IS RETURNED DIRECTLY.
C
        IF (DISTSQ.GT.TOLSQ) GO TO 1
        VALUE= ZPOSNS(ISCAN)
        IREPLY= 0
        RETURN
C
C          THE WEIGHT FACTOR <WEIGHT> ASSOCIATED WITH THE POINT IS
C          SET. IF IT IS VERY SMALL, THE POINT IS NOT INCLUDED.
C
    1   DIST= SQRT(DISTSQ)
        WEIGHT= (RADIUS-DIST)*(RADIUS-DIST)/DISTSQ
        IF (WEIGHT.LE.CRMIN) GO TO 100
C
        NUSED= NUSED+1
        WORK(1)= XDIFF*XDIFF+YDIFF*YDIFF
        WORK(2)= XDIFF
        WORK(3)= YDIFF
        WORK(4)= 1.0
        WORK(5)= ZPOSNS(ISCAN)
        KPIVOT= 1
C
C          THE FIRST ROW IS COPIED DIRECTLY TO [TRIANG]. OTHER
C          ROWS ARE TRANSFORMED USING GIVENS-ROTATIONS TO DELETE
C          ELEMENTS: THE GIVENS-TRANSFORMATION USES ROW <KROW> OF
C          THE R-MATRIX AND THE NEW ROW TO ANNIHILATE THE <KROW>-TH
C          ELEMENT OF THE NEW ROW. THE PIVOT VALUE IS STORED IN THE
C          ELEMENT <KPIVOT> OF [TRIANG] AND THE REMAINDER OF THE
C          <KROW>-TH ROW IN THE NEXT (5-<KROW>) ELEMENTS. A CHECK
C          IS FIRST MADE TO SEE IF ANY TRANSFORMATION IS NEEDED.
C
        IF (NUSED.EQ.1) GO TO 5
C
        KLIM= MIN0(NUSED-1,4)
        DO 200 KROW= 1,KLIM
          IF (ABS(WORK(KROW)).LT.CRMIN) GO TO 4
          KROWP1= KROW+1
C
C          TWO FORMS OF THE GIVENS-ROTATION ARE POSSIBLE (SEE 3RD.
C          REFERENCE ABOVE). A CHOICE IS MADE BETWEEN THE TWO
C          FORMS (TYPE-A AND TYPE-B) TO AVOID POSSIBILITIES OF
C          DIVISION BY ZERO AND UNDERFLOW. THE INITIAL SELECTION
C          IS MADE ON COMPARISON OF WORK(KROW) AND TRIANG(KPIVOT).
C
          IF (ABS(TRIANG(KPIVOT)).LE.ABS(WORK(KROW))) GO TO 3
C
C          THIS SECTION IS FOR TRANSFORMATION TYPE-A. IF
C          <SCALA3> < 2.0 THIS ONE IS USED. OTHERWISE THE
C          TYPE-B TRANSFORMATION BELOW IS USED INSTEAD.
C
    2     SCALA1= WORK(KROW)/TRIANG(KPIVOT)
          SCALA2= SCALA1*WEIGHT/RSCALE(KROW)
          SCALA3= SCALA1*SCALA2+1.0
C
          IF (SCALA3.GT.2.0) GO TO 3
C
C          <WEIGHT>, [RSCALE], THE PIVOT VALUE AND ROWS ARE REVISED.
C
          RSCALE(KROW)= RSCALE(KROW)/SCALA3
          WEIGHT= WEIGHT/SCALA3
C
          TRIANG(KPIVOT)= TRIANG(KPIVOT)+SCALA2*WORK(KROW)
C
          IEXT= KPIVOT
          DO 300 IREV= KROWP1,5
            IEXT= IEXT+1
            RNEW= TRIANG(IEXT)+SCALA2*WORK(IREV)
            WORK(IREV)= -SCALA1*TRIANG(IEXT)+WORK(IREV)
            TRIANG(IEXT)= RNEW
  300     CONTINUE
          GO TO 4
C
C          THIS SECTION IS FOR TRANSFORMATION TYPE-B. IF
C          <SCALB3> > 2.0 THIS ONE IS USED. OTHERWISE THE
C          TYPE-A TRANSFORMATION ABOVE IS USED INSTEAD.
C
    3     SCALB1= TRIANG(KPIVOT)/WORK(KROW)
          SCALB2= SCALB1*RSCALE(KROW)/WEIGHT
          SCALB3= 1.0+SCALB1*SCALB2
C
          IF (SCALB3.GT.2.0) GO TO 2
C
C          <WEIGHT>, [RSCALE], THE PIVOT VALUE AND ROWS ARE REVISED.
C
          VK= WEIGHT/SCALB3
          WEIGHT= RSCALE(KROW)/SCALB3
          RSCALE(KROW)= VK
C
          TRIANG(KPIVOT)= SCALB2*TRIANG(KPIVOT)+WORK(KROW)
C
          IEXT= KPIVOT
          DO 400 IREV= KROWP1,5
            IEXT= IEXT+1
            RNEW= SCALB2*TRIANG(IEXT)+WORK(IREV)
            WORK(IREV)= TRIANG(IEXT)-SCALB1*WORK(IREV)
            TRIANG(IEXT)= RNEW
  400     CONTINUE
C
C          THE POSITION OF THE PIVOT ELEMENT IS THEN UPDATED.
C
    4     KPIVOT= KPIVOT-KROW+6
  200   CONTINUE
        IF (NUSED.GT.4) GO TO 100
C
C          THIS COMPLETES THE SEQUENCE OF GIVENS-TRANSFORMATIONS. IF
C          THE R-MATRIX IS NOT COMPLETE, THE NEW ROW [WORK] IS ADDED.
C          <KPIVOT> IS THE START POSITION IN [TRIANG] OF THE NEW ROW.
C
    5   IEXT= KPIVOT
        DO 500 KOPY= NUSED,5
          TRIANG(IEXT)= WORK(KOPY)
          IEXT= IEXT+1
  500   CONTINUE
        RSCALE(NUSED)= WEIGHT
C
  100 CONTINUE
C
C          <IREPLY> IS SET TO 1 IF LESS THAN 4 DATA POINTS
C          WERE USED OR IF THE DATA POINTS ARE SUCH THAT
C          THE MATRIX OF EQUATIONS IS SINGULAR (EG. IF THE
C          POINTS ALL LIE ALONG ONE OR TWO STRAIGHT LINES).
C
      IREPLY= 1
      IF (NUSED.LT.4)               RETURN
      IF (ABS(TRIANG(13)).LT.CRMIN) RETURN
C
C          SOLUTION OF THE EQUATIONS YIELDS THE C-COEFFICIENTS.
C          THE RETURNED VALUE IS SET TO THAT OF COEFFICIENT C4.
C
      IREPLY= 0
      VALUE= TRIANG(14)/TRIANG(13)
C
      RETURN
      END

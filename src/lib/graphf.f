      SUBROUTINE GRAPHF(FUNCX)
C
C          ------------------------------------------------
C          ROUTINE NO. (  96)   VERSION (A8.4)    04:MAR:91
C          ------------------------------------------------
C
C          THIS DRAWS ALL OF THE GIVEN FUNCTION
C          WHICH LIES WITHIN THE CURRENT WINDOW AREA.
C
C
C          <FUNCX>  IS THE FUNCTION IDENTIFIER (AND MUST BE
C                   DECLARED AS EXTERNAL IN THE CALLING PROGRAM).
C
C
      REAL    CURVEX(101),CURVEY(101)
      LOGICAL SAVE
C
      EXTERNAL FUNCX
C
      COMMON /T0CURV/ MCURV0
      COMMON /T0TRAC/ IPRINT
      COMMON /T0WNDO/ X1WND0,X2WND0,Y1WND0,Y2WND0
C
C
      IF (IPRINT.EQ.1) CALL G0MESG(38,0)
C
C          THE STEP SIZE AND THE ALLOWED TOLERANCES ARE CALCULATED.
C          THE CURRENT CURVE METHOD IS SAVED AND METHOD-2 IS SET.
C
      STEPX= ABS(X2WND0-X1WND0)/499.0
      DELTAX= ABS(X2WND0-X1WND0)*0.001
      DELTAY= ABS(Y2WND0-Y1WND0)*0.001
      METSAV= MCURV0
      MCURV0= 2
C
C          THE FIRST TWO POINTS AND THE START SLOPE ARE FOUND.
C          THE LOOP EXTENDS THE SECOND AND THIRD POINTS UNTIL
C          THE LATTER DIFFERS FROM THE CURRENT SLOPE LINE BY
C          MORE THAN THE ALLOWED TOLERANCE, THE SLOPE BETWEEN
C          THE FIRST AND MIDDLE POINTS IS RECALCULATED, THEN
C          THE SECOND AND THIRD POINTS ARE EXTENDED ANEW UNTIL
C          THE THIRD HAS AGAIN DRIFTED OFF TOO FAR. THE MIDDLE
C          POSITION IS THEN SAVED. THIS IS REPEATED UNTIL ALL OF
C          THE CURVE WITHIN THE WINDOW HAS BEEN DONE. THE SAVED
C          SET OF POINTS IS OUTPUT WHENEVER IT BECOMES TOO LARGE.
C
      STARTX= AMIN1(X1WND0,X2WND0)
      ENDX= AMAX1(X1WND0,X2WND0)
      X1= STARTX
      Y1= FUNCX(X1)
      X2= X1+STEPX
      Y2= FUNCX(X2)
      SLOPE= (Y2-Y1)/(X2-X1)
      IF (ABS(SLOPE).LT.1.0E-14) SLOPE= SIGN(1.0E-14,SLOPE)
      NPTS= 1
      CURVEX(1)= X1
      CURVEY(1)= Y1
      SAVE= .FALSE.
    1   X3= X2+STEPX
        IF (X3.GT.ENDX) GO TO 6
        Y3= FUNCX(X3)
C
    2   DISTX= ABS((Y3-Y1)/SLOPE-(X3-X1))
        DISTY= ABS(DISTX*SLOPE)
        IF (DISTX.GT.DELTAX.AND.DISTY.GT.DELTAY) GO TO 3
        X2= X3
        Y2= Y3
        GO TO 1
C
    3   IF (SAVE) GO TO 4
        SAVE= .TRUE.
        SLOPE= (Y2-Y1)/(X2-X1)
        IF (ABS(SLOPE).LT.1.0E-14) SLOPE= SIGN(1.0E-14,SLOPE)
        GO TO 2
C
    4   IF (NPTS.LT.100) GO TO 5
        CALL G0CURV(CURVEX,CURVEY,1,100,0)
        NPTS= 1
        CURVEX(1)= CURVEX(100)
        CURVEY(1)= CURVEY(100)
C
    5   NPTS= NPTS+1
        CURVEX(NPTS)= X2
        CURVEY(NPTS)= Y2
        SAVE= .FALSE.
        X1= X2
        Y1= Y2
        X2= X3
        Y2= Y3
        GO TO 1
C
    6 NPTS= NPTS+1
      CURVEX(NPTS)= ENDX
      CURVEY(NPTS)= FUNCX(ENDX)
      CALL G0CURV(CURVEX,CURVEY,1,NPTS,0)
C
C          LASTLY, THE ORIGINAL CURVE METHOD IS RESTORED.
C
      MCURV0= METSAV
C
      RETURN
      END

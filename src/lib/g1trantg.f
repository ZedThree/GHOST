      SUBROUTINE G1TRAN(KIND)
C
C          ------------------------------------------------
C          ROUTINE NO. (1003)   VERSION (A8.5TG)  28:SEP:88
C          ------------------------------------------------
C
C          THIS ENCODES REAL VALUES AND TRANSFERS BOTH
C          REAL AND INTEGER DATA TO THE OUTPUT BUFFER.
C
C          THE ARGUMENT IS AS FOLLOWS:
C
C          <KIND>   GIVES THE TYPE OF SOURCE DATA:
C                   = 1, IT IS REAL,
C                   = 2, IT IS INTEGER.
C
C
      DOUBLE PRECISION DFP,FPA
C
      COMMON /T1TRAA/ ICODEB(26),INDXB
      COMMON /T1TRBB/ RFUNOB(64),IFUNOB(257)
      COMMON /T3LIMS/ IMAXI,RMAXI,RMINI
C
C
      IF (KIND.NE.1) GO TO 5
C
C          THIS PART IS FOR REAL DATA. LOOP-100
C          ENCODES EACH REAL VALUE IN [RFUNOB].
C
      LENGTH= IFUNOB(2)
      NOFFI= 3
      IF (LENGTH.LE.0) GO TO 4
C
      DO 100 IVAL= 1,LENGTH
        FP= RFUNOB(IVAL)
C
C          IF THE NUMBER IS ZERO, IT CAN BE REPRESENTED BY 1 BYTE.
C          (TO PREVENT OVERFLOWS, VERY SMALL VALUES ARE MADE ZERO)
C          OTHERWISE THE EXPONENT AND THE 3 MANTISSA VALUES ARE
C          CALCULATED. THE FIRST GIVES THE SIGN OF THE NUMBER.
C
        IF (FP.GT.0.0.AND.FP.LT. 1000.0*RMINI) GO TO 3
        IF (FP.LT.0.0.AND.FP.GT.-1000.0*RMINI) GO TO 3
        IF (ABS(FP).LT.RMINI) GO TO 3
C
        DFP= FP
        FLOG= DLOG10(DABS(DFP))
        NEXPON= FLOG
        IF (FLOG.GE.0.0) NEXPON= NEXPON+1
C
    1     IFUNOB(NOFFI+3)= NEXPON
          FPA= DFP*10.0D0**(2-NEXPON)+DSIGN(0.5D-6,DFP)
C
C          THE DECADE VALUE IS CORRECTED IF NECESSARY.
C
          IF (DABS(FPA).LT.100.0D0) GO TO 2
C
          NEXPON= NEXPON+1
          GO TO 1
C
C          A RANGE CHECK IS APPLIED TO THE EXPONENT
C
    2   IF (NEXPON.GT.99) IFUNOB(NOFFI+3)= 99
        IF (NEXPON.LT.-99) IFUNOB(NOFFI+3)= -99
C
C          THE 3 MANTISSA VALUES ARE STORED AND THE POINTER IS UPDATED.
C
        IFUNOB(NOFFI)= IDINT(FPA)
        FPA= DABS(FPA-IFUNOB(NOFFI))*1.0D3
        IFUNOB(NOFFI+1)= IDINT(FPA)
        FPA= (FPA-IFUNOB(NOFFI+1))*1.0D3
        IFUNOB(NOFFI+2)= IDINT(FPA)
        NOFFI= NOFFI+4
        GO TO 100
C
C          WITH A ZERO VALUE, THE POINTER IS INCREMENTED BY 1 ONLY.
C
    3   IFUNOB(NOFFI)= 0
        NOFFI= NOFFI+1
  100 CONTINUE
C
C          WHEN ALL REAL VALUES HAVE BEEN CONVERTED INTO INTEGERS,
C          THE LENGTH BYTE IS AMENDED TO ALLOW FOR THE EXPANSION,
C          AND IS ALSO INCREMENTED BY 256 TO INDICATE CODED REAL
C          DATA. THE INTEGER VALUES ARE THEN COPIED TO [ICODEB].
C
    4 IFUNOB(2)= NOFFI+253
    5 LENGTH= IFUNOB(2)+2
      IF (LENGTH.GE.258) LENGTH= LENGTH-256
C
C          THIS PART IS FOR INTEGER DATA. THE VALUES IN
C          [IFUNOB] ARE COPIED INTO THE OUTPUT BUFFER
C          AND THE BUFFER POINTER IS UPDATED. THE BUFFER
C          IS EMPTIED WHEN IT IS FULL BY CALLING <G1SYSI>.
C
      DO 200 IVAL= 1,LENGTH
        ICODEB(INDXB)= IFUNOB(IVAL)
        INDXB= INDXB+1
        IF (INDXB.LE.26) GO TO 200
C
        CALL G1DVIO(3,ICODEB,26)
        INDXB= 1
  200 CONTINUE
C
      RETURN
      END

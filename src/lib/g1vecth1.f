      SUBROUTINE G1VECT(IXVAL,IYVAL,ITYPE)
C
C          ------------------------------------------------
C          ROUTINE NO. (1008)   VERSION (A8.1H1)  11:MAR:91
C          ------------------------------------------------
C
C          THIS ROUTINE PROVIDES THE VECTOR DRAWING CAPABILITIES
C          OF A DEVICE.
C          (THIS VERSION IS FOR THE HEWLETT PACKARD GRAPHICS LANGUAGE)
C
C          THE VALUES OF THE ARGUMENT ARE AS FOLLOWS:
C
C          = 1, DRAW VECTOR FROM (IXMSAV,IYMSAV) TO (IXVAL,IYVAL),
C          = 2, DRAW TO (IXVAL,IYVAL)
C          = 3, MOVE TO (IXVAL,IYVAL) IF NOT ALREADY THERE.
C
C
      INTEGER ICODES(16),IBYTE(6)
      LOGICAL MOVE,DONE,SETCOL
      LOGICAL DOWN
C
      COMMON /T1H1AA/ IXPLOT,IYPLOT,IXMSAV,IYMSAV,NCMND,DOWN
      COMMON /T1LAND/ LNDSCP
C
      DATA ICOMMA / 44/, MINUS  / 45/, IZERO  / 48/, ISCOLN / 59/,
     &     LETTRD / 68/, LETTRP / 80/, LETTRR / 82/, LETTRU / 85/
C
C          PUT SETCOL TO .FALSE. IF PU AND PD DO NOT NEED TO BE
C          TERMINATED WITH A SEMI-COLON, OTHERWISE SET IT TO .TRUE.
C
      DATA SETCOL /.FALSE./
C
C
      MOVE= .FALSE.
      DONE= .TRUE.
      IXPOS= IXVAL
      IYPOS= IYVAL
      IF (ITYPE.EQ.2) GO TO 3
      IF (ITYPE.EQ.3) GO TO 1
      IF (IXPLOT.EQ.IXMSAV.AND.IYPLOT.EQ.IYMSAV) GO TO 2
C
      MOVE= .TRUE.
      DONE= .FALSE.
      IXPOS= IXMSAV
      IYPOS= IYMSAV
      GO TO 3
C
    1 MOVE= .TRUE.
    2 IF (IXPLOT.EQ.IXPOS.AND.IYPLOT.EQ.IYPOS) RETURN
C
C
    3 IDX= IXPOS-IXPLOT
      IDY= IYPOS-IYPLOT
      IF (LNDSCP.NE.0) THEN
        IDX= IYPOS-IYPLOT
        IDY= IXPLOT-IXPOS
      END IF
C
C          THE VALUES OF <NCMND> HAVE THE FOLLOWING MEANINGS:
C
C          0  A NON-VECTOR INSTRUCTION WAS SENT LAST,
C          1  PU, PD OR PR WAS SENT LAST,
C          2  VECTOR COORDINATES WERE SENT LAST.
C
      IF (NCMND.GT.0) GO TO 4
C
      ICODES(1)= ISCOLN
      ICODES(2)= LETTRP
      ICODES(3)= LETTRR
      CALL G1BUFF(ICODES,3)
      NCMND= 1
    4 IF (.NOT.MOVE) GO TO 6
      IF (.NOT.DOWN) GO TO 10
C
C          THIS SECTION RAISES THE PEN.
C
       INDEX= 0
       IF (.NOT.SETCOL) GO TO 5
C
      ICODES(1)= ISCOLN
      INDEX= 1
    5 ICODES(INDEX+1)= LETTRP
      ICODES(INDEX+2)= LETTRU
      DOWN= .FALSE.
      GO TO 8
C
    6 IF (DOWN) GO TO 10
C
C          THIS SECTION LOWERS THE PEN.
C
      INDEX= 0
      IF (.NOT.SETCOL) GO TO 7
C
      ICODES(1)= ISCOLN
      INDEX= 1
    7 ICODES(INDEX+1)= LETTRP
      ICODES(INDEX+2)= LETTRD
      DOWN= .TRUE.
    8 INDEX= INDEX+2
      IF (.NOT.SETCOL) GO TO 9
C
      ICODES(INDEX+1)= ISCOLN
      ICODES(INDEX+2)= LETTRP
      ICODES(INDEX+3)= LETTRR
      INDEX= INDEX+3
    9 CALL G1BUFF(ICODES,INDEX)
      NCMND= 1
C
C          THIS SECTION CONVERTS THE <IDX>, <IDY> PAIR INTO
C          THE APPROPRIATE STRING OF BYTES FOR HP PLOTTERS.
C          UP TO 5 BYTES ARE USED FOR EACH COORDINATE, AND EACH
C          BYTE REPRESENTS A DIGIT IN RADIX 10.
C
   10 INDEX= 0
      IF (NCMND.NE.2) GO TO 11
C
      ICODES(1)= ICOMMA
      INDEX= 1
C
C          THIS SECTION CALCULATES THE VECTOR BYTES
C          FOR THE RELATIVE X-COORDINATE <IDX>.
C
   11 IVCTOR= IDX
      IFROM= 1
      GO TO 14
C
   12 INDEX= INDEX+1
      ICODES(INDEX)= ICOMMA
C
C           THIS SECTION CALCULATES THE VECTOR BYTES
C           FOR THE RELATIVE Y-COORDINATE <IDY>.
C
      IVCTOR= IDY
      IFROM= 2
      GO TO 14
C
   13 NCMND= 2
      CALL G1BUFF(ICODES,INDEX)
      IXPLOT= IXPOS
      IYPLOT= IYPOS
      IXMSAV= IXPLOT
      IYMSAV= IYPLOT
      IF (DONE) RETURN
C
      MOVE= .FALSE.
      DONE= .TRUE.
      IXPOS= IXVAL
      IYPOS= IYVAL
      GO TO 2
C
C          THIS IS AN INTERNAL SUBROUTINE TO CALCULATE THE PLOT
C          CODES FOR A VECTOR AND PUT THEM IN THE OUTPUT BUFFER.
C
   14 IF (IVCTOR.GE.0) GO TO 15
C
      INDEX= INDEX+1
      ICODES(INDEX)= MINUS
      IVCTOR= -IVCTOR
C
C          THE APPROPRIATE SEVEN BYTES ARE CALCULATED (LOW -> HIGH
C          ORDER) AND PLACED IN THE BUFFER IN HIGH -> LOW ORDER.
C
   15 DO 100 I= 1,6
        IDIVSN= IVCTOR/10
        IBYTE(I)= IVCTOR-IDIVSN*10
        INDXBT= I
        IVCTOR= IDIVSN
        IF (IDIVSN.EQ.0) GO TO 16
  100 CONTINUE
C
   16 DO 200 I= 1,INDXBT
        IPOS1= INDEX+I
        IPOS2= INDXBT-I+1
        ICODES(IPOS1)= IBYTE(IPOS2)+IZERO
  200 CONTINUE
C
      INDEX= INDEX+INDXBT
C
C          CONTROL ALWAYS RETURNS TO THE ORIGINATING SECTION.
C
      GO TO (12,13), IFROM
      END

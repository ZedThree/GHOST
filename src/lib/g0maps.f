      SUBROUTINE G0MAPS(XRECT1,XRECT2,YRECT1,YRECT2)
C
C          ------------------------------------------------
C          ROUTINE NO. (  25)   VERSION (A8.8)    22:JAN:87
C          ------------------------------------------------
C
C          THIS SETS THE ACTUAL MAPPING RECTANGLE USED.
C
C
C          THE ARGUMENTS ARE AS FOLLOWS:
C
C          <XRECT1> IS THE X-AXIS LEFT LIMIT,
C          <XRECT2> IS THE X-AXIS RIGHT LIMIT,
C          <YRECT1> IS THE Y-AXIS LOWER LIMIT,
C          <YRECT2> IS THE Y-AXIS UPPER LIMIT.
C
C
      REAL    RDATA(4)
      INTEGER IDATA(1)
      LOGICAL ERRON
C
      COMMON /T0AUTM/ MAPNUM
      COMMON /T0CSIZ/ CSIZE,MRKSIZ
      COMMON /T0CSLO/ SLOPE,MRKSLP
      COMMON /T0MACT/ MRKMAP,MRKWIN
      COMMON /T0MAPA/ X1MAPV,X2MAPV,Y1MAPV,Y2MAPV
      COMMON /T0MAPD/ X1MAPD,X2MAPD,Y1MAPD,Y2MAPD
      COMMON /T0MAPP/ X1MAP0,X2MAP0,Y1MAP0,Y2MAP0
      COMMON /T0MAPS/ ORIMX0,ORIMY0,SCAMX0,SCAMY0
      COMMON /T0MAPT/ MAPNO0
      COMMON /T0PPOS/ XPLOT0,YPLOT0
      COMMON /T0TRAC/ IPRINT
      COMMON /T0TRAN/ SCALX0,SCALY0,ROTAT0,RPICX0,RPICY0,RDEVX0,RDEVY0,
     &                VRPICX,VRPICY,VRDEVX,VRDEVY
      COMMON /T0WNDO/ X1WND0,X2WND0,Y1WND0,Y2WND0
      COMMON /T3ERRS/ ERRON,NUMERR
      COMMON /T3LIMS/ IMAXI,RMAXI,RMINI
      COMMON /T3NBYR/ NBYTR
C
      DATA IDATA /0/
C
C
C          THE ARGUMENTS ARE STORED AND THE MAP MARKER IS SET.
C
      X1MAPV= XRECT1
      X2MAPV= XRECT2
      Y1MAPV= YRECT1
      Y2MAPV= YRECT2
      MRKMAP= 1
C
C          IF ANY ARGUMENTS ARE THE SAME, MAPPING IS AUTOMATIC.
C          OTHERWISE, THE SCALE FACTORS AND MAPPING CONSTANTS ARE
C          CALCULATED (FIRST FOR THE X-AXIS, THEN FOR THE Y-AXIS).
C
      IF (ABS(X2MAPV-X1MAPV).LT.RMINI.OR.
     &    ABS(Y2MAPV-Y1MAPV).LT.RMINI) GO TO 5
      IF (ABS(X2MAPD-X1MAPD).LT.RMINI.OR.
     &    ABS(Y2MAPD-Y1MAPD).LT.RMINI) GO TO 5
C
      DIFF= X2MAPD-X1MAPD
      MAPNO0= MAPNUM
      IF (MAPNO0.EQ.3.OR.MAPNO0.EQ.4) GO TO 1
C
      X1MAP0= (X1MAPV*X2MAPD-X2MAPV*X1MAPD)/DIFF
      X2MAP0= X1MAP0+(X2MAPV-X1MAPV)/DIFF
      ORIMX0= X1MAP0
      SCAMX0= 0.0
      IF (ABS(X2MAP0-X1MAP0).LT.RMINI) GO TO 2
C
      SCAMX0= 1.0/(X2MAP0-X1MAP0)
      GO TO 2
C
    1 IF (ABS(SIGN(1.0,X1MAPV)-SIGN(1.0,X2MAPV)).GE.RMINI) GO TO 901
C
      EXT= (X2MAPD*ALOG(ABS(X1MAPV))-X1MAPD*ALOG(ABS(X2MAPV)))/DIFF
      X1MAP0= EXP(EXT)*SIGN(1.0,X1MAPV)
      X2MAP0= EXP(EXT+ALOG(X2MAPV/X1MAPV)/DIFF)*SIGN(1.0,X2MAPV)
      AB1MAP= ABS(X1MAP0)
      AB2MAP= ABS(X2MAP0)
      IF (AB1MAP.LT.RMINI.OR.AB2MAP.LT.RMINI) GO TO 901
C
      ORIMX0= ALOG(AB1MAP)
      DIFEXP= ALOG(AB2MAP)-ORIMX0
      IF (ABS(DIFEXP).LT.RMINI) GO TO 901
C
      SCAMX0= 1.0/DIFEXP
    2 DIFF= Y2MAPD-Y1MAPD
      MAPNO0= MAPNUM
      IF (MAPNO0.EQ.2.OR.MAPNO0.EQ.4) GO TO 3
C
      Y1MAP0= (Y1MAPV*Y2MAPD-Y2MAPV*Y1MAPD)/DIFF
      Y2MAP0= Y1MAP0+(Y2MAPV-Y1MAPV)/DIFF
      ORIMY0= Y1MAP0
      SCAMY0= 0.0
      IF (ABS(Y2MAP0-Y1MAP0).LT.RMINI) GO TO 4
C
      SCAMY0= 1.0/(Y2MAP0-Y1MAP0)
      GO TO 4
C
    3 IF (ABS(SIGN(1.0,Y1MAPV)-SIGN(1.0,Y2MAPV)).GE.RMINI) GO TO 901
C
      EXT= (Y2MAPD*ALOG(ABS(Y1MAPV))-Y1MAPD*ALOG(ABS(Y2MAPV)))/DIFF
      Y1MAP0= EXP(EXT)*SIGN(1.0,Y1MAPV)
      Y2MAP0= EXP(EXT+ALOG(Y2MAPV/Y1MAPV)/DIFF)*SIGN(1.0,Y2MAPV)
      AB1MAP= ABS(Y1MAP0)
      AB2MAP= ABS(Y2MAP0)
      IF (AB1MAP.LT.RMINI.OR.AB2MAP.LT.RMINI) GO TO 901
C
      ORIMY0= ALOG(AB1MAP)
      DIFEXP= ALOG(AB2MAP)-ORIMY0
      IF (ABS(DIFEXP).LT.RMINI) GO TO 901
C
      SCAMY0= 1.0/DIFEXP
C
C          THE ARGUMENTS ARE THEN PASSED ON AND THE
C          CURRENT PLOTTING POSITION IS RESTORED.
C
    4 XPLOT0= X1MAP0
      YPLOT0= Y1MAP0
      VRPICX= XPLOT0
      VRPICY= YPLOT0
      RDATA(1)= X1MAP0
      RDATA(2)= X2MAP0
      RDATA(3)= Y1MAP0
      RDATA(4)= Y2MAP0
      CALL G3LINK(7,MAPNO0,4*NBYTR,IDATA,RDATA)
C
C          IF <CTRSIZ> OR <CTRSLP> HAS BEEN INVOKED, IT IS
C          CALLED AGAIN NOW TO ADJUST FOR THE NEW MAPPING.
C
      IPRSAV= IPRINT
      IPRINT= 0
      IF (MRKSIZ.EQ.1) CALL CTRSIZ(CSIZE)
      IF (MRKSLP.EQ.1) CALL CTRSLP(SLOPE)
    5 IF (MRKWIN.NE.0) GO TO 6
C
      CALL WINDOW(XRECT1,XRECT2,YRECT1,YRECT2)
      MRKWIN= 0
      GO TO 7
C
    6 IF (MRKWIN.GT.0) CALL WINDOW(X1WND0,X2WND0,Y1WND0,Y2WND0)
C
    7 CALL UNLOC
      CALL SCAROT(1.0,1.0,0.0)
      IPRINT= IPRSAV
      RETURN
C
C          THIS SECTION IS FOR LOG.-MAPPING ERRORS.
C
  901 SCAMX0= 0.0
      SCAMY0= 0.0
      VALIM= 1.0
      IF (ABS(X2MAP0).GE.RMINI) VALIM= SIGN(VALIM,X2MAP0)
      IF (ABS(X1MAP0).GE.RMINI) VALIM= SIGN(VALIM,X1MAP0)
C
      X1MAP0= VALIM
      ORIMX0= VALIM
      VALIM= 1.0
      IF (ABS(Y2MAP0).GE.RMINI) VALIM= SIGN(VALIM,Y2MAP0)
      IF (ABS(Y1MAP0).GE.RMINI) VALIM= SIGN(VALIM,Y1MAP0)
C
      Y1MAP0= VALIM
      ORIMY0= Y1MAP0
C
      NUMERR= 2
      IF (ERRON) CALL G0ERMS
      GO TO 5
C
      END

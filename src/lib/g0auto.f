      SUBROUTINE G0AUTO(XPT,YPT,MINX,MAXX,MINY,MAXY,IAREA)
C
C          ------------------------------------------------
C          ROUTINE NO. (  30)   VERSION (A8.6)    25:NOV:86
C          ------------------------------------------------
C
C          THIS PERFORMS AUTOMATIC SETTING OF MAPPING CONSTANTS.
C
C
C          THE ARGUMENTS ARE AS FOLLOWS:
C
C          [XPT]    IS THE MAPPING X-RANGE,
C          [YPT]    IS THE MAPPING Y-RANGE,
C          <MINX>   IS THE LOWER LIMIT OF [XPT],
C          <MAXX>   IS THE UPPER LIMIT OF [XPT],
C          <MINY>   IS THE LOWER LIMIT OF [YPT],
C          <MINY>   IS THE UPPER LIMIT [YPT]
C          <IAREA>  SETS THE TYPE OF BORDER:
C                   = 0, A 10% BORDER IS SET,
C                   = 1, THE FULL WINDOW AREA IS USED.
C
C
      REAL    XPT(MAXX),YPT(MAXY)
      LOGICAL ERRON
C
      COMMON /T0AUTM/ MAPNUM
      COMMON /T0MACT/ MRKMAP,MRKWIN
      COMMON /T0MAPA/ X1MAPV,X2MAPV,Y1MAPV,Y2MAPV
      COMMON /T0TRAC/ IPRINT
      COMMON /T0WNDO/ X1WND0,X2WND0,Y1WND0,Y2WND0
      COMMON /T3ERRS/ ERRON,NUMERR
      COMMON /T3LIMS/ IMAXI,RMAXI,RMINI
C
C
      CALL G3INIT(2)
C
C          IF AUTOMATIC MAPPING IS NOT REQUIRED ON THE X-AXIS,
C          THE Y-AXIS IS TESTED FOR AUTOMATIC MAPPING INSTEAD.
C          THE FIRST LOOP FINDS THE EXTREME VALUES OF ARRAY [XPT].
C          IF A BORDER IS REQUIRED, THE WINDOW EXTENTS ARE AMENDED.
C
      IAUTO= 0
      IF (ABS(X2WND0-X1WND0).GE.RMINI.AND.
     &    ABS(X2MAPV-X1MAPV).GE.RMINI) GO TO 3
C
      IAUTO= 1
      X1WND0= XPT(MINX)
      X2WND0= X1WND0
C
      DO 100 ISERCH= MINX,MAXX
        IF (XPT(ISERCH).GT.X2WND0) X2WND0= XPT(ISERCH)
        IF (XPT(ISERCH).LT.X1WND0) X1WND0= XPT(ISERCH)
  100 CONTINUE
C
      IF (ABS(X2WND0-X1WND0).LT.RMINI) GO TO 901
      IF (IAREA.EQ.1) GO TO 2
      IF (MAPNUM.LT.3) GO TO 1
      IF (ABS(SIGN(1.0,X2WND0)-SIGN(1.0,X1WND0)).GE.RMINI) GO TO 901
C
      DXY= 0.1*ALOG(X2WND0/X1WND0)
      X1WND0= EXP(ALOG(ABS(X1WND0))-DXY)*SIGN(1.0,X1WND0)
      X2WND0= EXP(ALOG(ABS(X2WND0))+DXY)*SIGN(1.0,X2WND0)
      GO TO 2
C
    1 DXY= 0.1*(X2WND0-X1WND0)
      X2WND0= X2WND0+DXY
      X1WND0= X1WND0-DXY
    2 X1MAPV= X1WND0
      X2MAPV= X2WND0
C
C          IF AUTOMATIC MAPPING IS NOT REQUIRED ON
C          THE Y-AXIS, THE NEXT SECTION IS SKIPPED.
C          THE NEXT LOOP FINDS THE EXTREME VALUES OF ARRAY [YPT].
C          IF A BORDER IS REQUIRED, THE WINDOW EXTENTS ARE AMENDED.
C
    3 IF (ABS(Y2WND0-Y1WND0).GE.RMINI.AND.
     &    ABS(Y2MAPV-Y1MAPV).GE.RMINI) GO TO 6
C
      IAUTO= 1
      Y1WND0= YPT(MINY)
      Y2WND0= Y1WND0
C
      DO 200 ISERCH= MINY,MAXY
        IF (YPT(ISERCH).GT.Y2WND0) Y2WND0= YPT(ISERCH)
        IF (YPT(ISERCH).LT.Y1WND0) Y1WND0= YPT(ISERCH)
  200 CONTINUE
C
      IF (ABS(Y2WND0-Y1WND0).LT.RMINI) GO TO 901
      IF (IAREA.EQ.1) GO TO 5
      IF (MAPNUM.EQ.1.OR.MAPNUM.EQ.3) GO TO 4
      IF (ABS(SIGN(1.0,Y2WND0)-SIGN(1.0,Y1WND0)).GE.RMINI) GO TO 901
C
      DXY= 0.1*ALOG(Y2WND0/Y1WND0)
      Y1WND0= EXP(ALOG(ABS(Y1WND0))-DXY)*SIGN(1.0,Y1WND0)
      Y2WND0= EXP(ALOG(ABS(Y2WND0))+DXY)*SIGN(1.0,Y2WND0)
      GO TO 5
C
    4 DXY= 0.1*(Y2WND0-Y1WND0)
      Y2WND0= Y2WND0+DXY
      Y1WND0= Y1WND0-DXY
    5 Y1MAPV= Y1WND0
      Y2MAPV= Y2WND0
C
C          IF BOTH SECTIONS HAVE BEEN SKIPPED, AUTOMATIC MAPPING
C          IS NOT REQUIRED, AND SUBROUTINE EXITS; OTHERWISE,
C          THE NEW ARGUMENTS ARE MAPPED AND WINDOWED BEFORE EXIT.
C
    6 IF (IAUTO.EQ.0)  RETURN
      IF (MRKMAP.EQ.0) GO TO 7
C
      CALL G0MAPS(X1MAPV,X2MAPV,Y1MAPV,Y2MAPV)
    7 IF (MRKWIN.EQ.0) RETURN
C
      IPRSAV= IPRINT
      IPRINT= 0
      CALL WINDOW(X1WND0,X2WND0,Y1WND0,Y2WND0)
      IPRINT= IPRSAV
      RETURN
C
  901 NUMERR= 5
      IF (ERRON) CALL G0ERMS
      RETURN
      END

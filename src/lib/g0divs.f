      SUBROUTINE G0DIVS(IAXIS,DIVLEN)
C
C          ------------------------------------------------
C          ROUTINE NO. ( 231)   VERSION (A8.8)    01:MAR:93
C          ------------------------------------------------
C
C          THIS FINDS THE POSITIONS OF THE INTERVALS ON THE GIVEN AXIS
C          (FOR LIN. SCALING) WHICH LIE WITHIN THE CURRENT WINDOW AREA,
C          AND ALSO SETS THE MOST SUITABLE AXIS ANNOTATION FORMAT.
C
C
C          <IAXIS> GIVES THE REQUIRED AXIS BY ITS MODULUS:
C                   = 1, THE X-AXIS IS TAKEN, OR
C                   = 2, THE Y-AXIS IS TAKEN.
C          <DIVLEN> GIVES THE REQUIRED INTERVAL LENGTH.
C
C
C          THE FOLLOWING ARGUMENTS ARE SUPPLIED THROUGH COMMON:
C
C          <X1WND0>    THE COORDINATES
C          <X2WND0>    OF
C          <Y1WND0>    THE
C          <Y2WND0>    WINDOW RECTANGLE.
C
C          <AXPOSX> THE POSITION OF THE X-AXIS ALONG Y.
C          <AXPOSY> THE POSITION OF THE Y-AXIS ALONG X.
C          <NOTATA> IF ZERO, NO ANNOTATION IS REQUIRED,
C                   IF NON-ZERO, ANNOT. FORMAT MUST BE CALCULATED.
C
C
C          THE FOLLOWING ARGUMENTS ARE RETURNED THROUGH COMMON:
C          (ONLY THE ARGS. RELEVANT TO THE GIVEN AXIS ARE CHANGED):
C
C          <KTYPEX> IS THE X-AXIS TYPE (= 1 FOR LIN. AXIS).
C          <KTYPEY> IS THE Y-AXIS TYPE (= 1 FOR LIN. AXIS).
C          <DIVLX>  IS THE X-AXIS SUB-INTERVAL LENGTH.
C          <DIVLY>  IS THE Y-AXIS SUB-INTERVAL LENGTH.
C          <NSKIPX> IS THE NO. OF SUB-INTERVALS PER MAJOR INTERVAL IN X.
C          <NSKIPY> IS THE NO. OF SUB-INTERVALS PER MAJOR INTERVAL IN Y.
C          <NTIKLX> IS THE MARKING START-POINT FOR THE X-AXIS.
C          <NTIKLY> IS THE MARKING START-POINT FOR THE Y-AXIS.
C          <NTIKHX> IS THE MARKING END-  POINT FOR THE X-AXIS.
C          <NTIKHY> IS THE MARKING END-  POINT FOR THE Y-AXIS.
C          <NDECSX> IS THE X-AXIS ANNOTATION BASIS-EXPONENT.
C          <NDECSY> IS THE Y-AXIS ANNOTATION BASIS-EXPONENT.
C          <NCHRSX> IS THE NO. OF CHARS. IN X-AXIS ANNOTATION.
C          <NCHRSY> IS THE NO. OF CHARS. IN Y-AXIS ANNOTATION.
C          <NAFTPX> IS THE NO. OF CHARS. AFTER THE DEC. PT. IN X.
C          <NAFTPY> IS THE NO. OF CHARS. AFTER THE DEC. PT. IN Y.
C          <KANNX>  GIVES THE X-AXIS ANNOTATION TYPE, AND
C          <KANNY>  GIVES THE Y-AXIS ANNOTATION TYPE, AS FOLLOWS:
C                   = 1, IT IS INTEGER
C                   = 2, IT IS REAL,
C                   = 3, IT IS INTEGER WITH MULT. FACTOR.
C                   = 4, IT IS REAL    WITH MULT. FACTOR.
C          <KAXIS>  IS SET BY <IAXIS> FOR SUBSEQUENT USE.
C
C
      LOGICAL DONE
C
      COMMON /T0AARG/ KAXIS
      COMMON /T0ADIX/ DIVLX,NTIKLX,NTIKHX
      COMMON /T0ADIY/ DIVLY,NTIKLY,NTIKHY
      COMMON /T0ANOX/ KANNX,NCHRSX,NAFTPX
      COMMON /T0ANOY/ KANNY,NCHRSY,NAFTPY
      COMMON /T0ASKX/ NSKIPX,NDECSX
      COMMON /T0ASKY/ NSKIPY,NDECSY
      COMMON /T0ATIC/ MTICKS
      COMMON /T0ATYP/ KTYPEX,KTYPEY
      COMMON /T0NOTA/ NOTATA
      COMMON /T0WNDO/ X1WND0,X2WND0,Y1WND0,Y2WND0
C
      DATA LIMSIG /5/
C
C
C          THE AXIS TYPE IS SET AND THE END POINTS ARE FOUND.
C
      KAXIS= IAXIS
      IF (IABS(KAXIS).EQ.1) THEN
        ENDMIN= AMIN1(X1WND0,X2WND0)
        ENDMAX= AMAX1(X1WND0,X2WND0)
      ELSE
        ENDMIN= AMIN1(Y1WND0,Y2WND0)
        ENDMAX= AMAX1(Y1WND0,Y2WND0)
      ENDIF
C
C          THE NO. OF STEPS IN THE WINDOW AT THE GIVEN INTERVAL SIZE
C          IS FOUND, AND IF THIS IS > 1000, THE INTERVAL LENGTH IS
C          INCREASED BY A SUITABLE FACTOR OF 10 TO GIVE < 999 STEPS.
C          A LIMIT OF 100 SUB-INTERVALS IS THEN SET, AND THE ACTUAL
C          SUB-INTERVAL LENGTH TO BE USED IS HENCE CALCULATED. IF
C          THE GIVEN STEP SIZE IS ZERO, A START INTERVAL-LENGTH OF
C          A SUITABLE POWER OF 10 IS CHOSEN TO GIVE APPROX. 15 SUB-
C          DIVISIONS, AND THE SUB-INTERVAL LIMIT IS SET ALSO AT 15.
C
      DIVSIZ= ABS(DIVLEN)
      IF (DIVSIZ.GT.0.0) THEN
        STEPS= (ENDMAX-ENDMIN)/DIVSIZ
        IF (STEPS.GE.1.0E3) THEN
          EXP= ALOG10(STEPS)
          IF (EXP.LT.0.0) EXP= EXP-1.0
C
          DIVSIZ= DIVSIZ*(10.0**(INT(EXP)-2))
        ENDIF
C
        LIMIT= 100
      ELSE
        DIVSIZ= (ENDMAX-ENDMIN)/MTICKS
        EXP= ALOG10(DIVSIZ)
        IF (EXP.LT.0.0) EXP= EXP-1.0
C
        DIVSIZ= 10.0**INT(EXP)
        LIMIT= MTICKS
      ENDIF
C
C          THIS SECTION CALCULATES THE INITIAL EDGE POINTS,
C          ROUNDING-OFF ALWAYS IN THE CORRECT DIRECTION.
C
      ROUND= 0.999
      IF (ENDMIN.LT.0.0) ROUND= -0.001
C
      NLO= (ENDMIN/DIVSIZ)+ROUND
      ROUND= -0.999
      IF (ENDMAX.GT.0.0) ROUND= 0.001
C
      NHI= (ENDMAX/DIVSIZ)+ROUND
      IDIV= 1
      IDEC= 1
      DONE= .FALSE.
C
C          THIS PART INCREASES THE INTERVAL SIZE BY FACTORS OF
C          2, 5, 10, ETC. UNTIL THE GIVEN LIMIT IS SATISFIED.
C
    1   IFACT= IDIV*IDEC
        NLONOW= NLO
        IF (NLO.GT.0) NLONOW= NLONOW+IFACT-1
C
        NLONOW= NLONOW/IFACT
        NHINOW= NHI
        IF (NHI.LT.0) NHINOW= NHINOW-IFACT+1
C
        NHINOW= NHINOW/IFACT
        IF ((NHINOW-NLONOW).LE.LIMIT) THEN
C
C          WHEN THE SUB-INTERVAL LIMIT HAS BEEN SATISFIED, THE
C          NEW VALUES ARE STORED, AND THE PROCESS IS REPEATED
C          WITH A LIMIT VALUE OF 15 TO FIND THE MAJOR INTERVALS.
C
          IF (DONE) THEN
            GO TO 2
          ELSE
            DONE= .TRUE.
            NLO= NLONOW
            NHI= NHINOW
            DIVSIZ= DIVSIZ*IFACT
            IDIV= 1
            IDEC= 1
            LIMIT= MTICKS
          ENDIF
        ELSE IF (IDIV.EQ.1) THEN
          IDIV=2
        ELSE IF (IDIV.EQ.2) THEN
          IDIV=5
        ELSE
          IDIV= 1
          IDEC= IDEC*10
        ENDIF
C
        GO TO 1
C
C          ONCE THE VALUES HAVE BEEN FOUND, THEY ARE PLACED
C          INTO THE APPROPRIATE VARIABLES IN THE COMMON BLOCK.
C
    2 IF (IABS(KAXIS).EQ.1) THEN
        KTYPEX= 1
        DIVLX= DIVSIZ
        NTIKLX= NLO
        NTIKHX= NHI
        NSKIPX= IFACT
      ELSE
        KTYPEY= 1
        DIVLY= DIVSIZ
        NTIKLY= NLO
        NTIKHY= NHI
        NSKIPY= IFACT
      ENDIF
C
C          IF <NOTATA> IS NON-ZERO AND THERE ARE TICK MARKS
C          TO ANNOTATE, THE NUMBER FORMAT IS CALCULATED BELOW:
C
      IF (NOTATA.EQ.0)  RETURN
      NCHARS= 1
      KANNOT= 1
      IF (NHI-NLO.GE.0) THEN
C
C          FIRST THE MAJOR INTERVAL SIZE IS CALCULATED, THEN
C          THE MAXIMUM AND MINIMUM POSITION VALUES ARE FOUND.
C
        STPSIZ= DIVSIZ*IFACT
        TIKMAX= ABS((NHI/IFACT)*STPSIZ)
        TIKMIN= ABS((NLO/IFACT)*STPSIZ)
        IF (TIKMAX.LT.TIKMIN) THEN
          TIKMAX= TIKMIN
          TIKMIN= ABS((NHI/IFACT)*STPSIZ)
        ENDIF

        IF (TIKMIN.LT.STPSIZ)      TIKMIN= STPSIZ
        IF (NLO.GT.0.AND.NHI.LT.0) TIKMIN= STPSIZ
        IF (NLO.LT.0.AND.NHI.GT.0) TIKMIN= STPSIZ
C
C          THE EXPONENT AND NO. OF SIG. DIGITS ARE FOUND FOR
C          BOTH THE LARGEST VALUE AND THE INTERVAL, AND
C          THESE ARE COMBINED TO GIVE THE NUMBER CONSTANTS.
C          IF NUMSIG > LIMSIG, THE NUMBER IS TRUNCATED;
C          IF NUMEXP >= LIMSIG, OVERFLOW HAS OCCURRED;
C          IF NAFTDP > LIMSIG, UNDERFLOW HAS OCCURRED;
C          IF NAFTDP <= 0, THE FORMAT IS INTEGER.
C
        CALL G0SIZS(TIKMAX,LIMSIG,MAXEXP,MAXSIG)
        INTEXP= MAXEXP
        INTSIG= 0
        IF (STPSIZ.LE.TIKMAX) CALL G0SIZS(STPSIZ,LIMSIG,INTEXP,INTSIG)
C
        NAFTDP= INTSIG-INTEXP
        NUMEXP= MAXEXP
        NUMSIG= MAXSIG
        IF (NAFTDP.GT.MAXSIG-MAXEXP) NUMSIG= NUMEXP+NAFTDP
        IF (NUMSIG.GT.LIMSIG)        NUMSIG= LIMSIG
C
        NAFTDP= NUMSIG-NUMEXP-1
        IF (NAFTDP.LT.0) NAFTDP= 0
C
        NCHARS= NUMSIG+2
        IF ((NUMEXP.GE.LIMSIG).OR.
     &      (NAFTDP.GT.LIMSIG)) THEN
C
C          THE FOLLOWING SECTIONS SET ANNOTATION TYPES
C          INTEGER AND REAL RESP., WITH A SCALING FACTOR.
C          THIS FACTOR IS GIVEN BY THE EXPONENT OF THE
C          MINIMUM (NON-ZERO) ABSOLUTE POSITION VALUE.
C
          CALL G0SIZS(TIKMIN,LIMSIG,MINEXP,MINSIG)
          NDECS= MINEXP
          NAFTDP= MINEXP-NUMEXP+NUMSIG-1
          IF (NAFTDP.GT.0) THEN
            KANNOT= 4
          ELSE
            NCHARS= MAXEXP-MINEXP+2
            NAFTDP= 0
            KANNOT= 3
          ENDIF
        ELSE
          NDECS= 0
C
C          THE FOLLOWING SECTIONS SET ANNOTATION TYPES
C          INTEGER AND REAL RESP., WITHOUT SCALING FACTOR.
C
          IF (NAFTDP.LE.0) THEN
            NCHARS= MAXEXP+2
            NAFTDP= 0
            KANNOT= 1
          ELSE
            IF (NUMEXP.LT.0) NCHARS= NAFTDP+3
C
            KANNOT= 2
          ENDIF
        ENDIF
      ENDIF
C
C          THE APPROPRIATE VALUES IN THE COMMON BLOCK
C          ARE THEN UPDATED, AND THE SUBROUTINE ENDS.
C
      IF (IABS(KAXIS).EQ.1) THEN
        NCHRSX= NCHARS
        NAFTPX= NAFTDP
        KANNX= KANNOT
        NDECSX= NDECS
      ELSE
        NCHRSY= NCHARS
        NAFTPY= NAFTDP
        KANNY= KANNOT
        NDECSY= NDECS
      ENDIF
C
      RETURN
      END

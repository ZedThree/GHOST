      SUBROUTINE OFFBAR(BASPOS,BARWID,BOFSET,BARPOS,VALSTS,ISTART,ISTOP,
     &                  NOVALS,NOSETS)
C
C          ------------------------------------------------
C          ROUTINE NO. ( 119)   VERSION (A8.1)    22:JUL:88
C          ------------------------------------------------
C
C          THIS DRAWS A MULTIPLE BAR CHART OF A GIVEN SET OF
C          VALUES,WITH HORIZONTAL OR VERTICAL BARS WITH A
C          GIVEN OFFSET BETWEEN BARS IN THE SAME SET.
C
C
C          THE ARGUMENTS ARE AS FOLLOWS:
C
C          <BASPOS>  IS THE BASELINE ORIGIN OF THE GRAPH,
C          <BARWID>  IS THE THICKNESS OF THE BARS,
C          <BOFSET>  IS THE OFFSET BETWEEN BARS IN THE SAME SET,
C          [BARPOS]  ARE THE POSITIONS OF THE BARS,
C          [VALSTS]  ARE THE VALUES TO BE GRAPHED,
C          <ISTART>  IS THE LOWER BOUNDARY, AND
C          <ISTOP>   IS THE UPPER BOUNDARY OF THE BAR NUMBERS,
C          <NOVALS>  IS THE TOTAL NUMBER OF BARS IN THE VALUES ARRAY,
C          <NOSETS>  IS THE TOTAL NUMBER OF SETS OF BARS IN THE VALUES ARRAY.
C
C
      REAL    BAUTO(2),VAUTO(2),BARPOS(ISTOP),VALSTS(NOVALS,NOSETS)
      REAL    RDATA(1),POINTS(100,2)
      INTEGER IDATA(1)
      LOGICAL FILL
C
      COMMON /T0BRTY/ IBRTYP
      COMMON /T0DBND/ IDRBND
      COMMON /T0KLST/ LSTCL0(100),LENLST
      COMMON /T0MULF/ INFLGS(100)
      COMMON /T0PPOS/ XPLOT0,YPLOT0
      COMMON /T0TRAC/ IPRINT
      COMMON /T0TRAR/ RTRAC1,RTRAC2,RTRAC3,RTRAC4
      COMMON /T3LIMS/ IMAXI,RMAXI,RMINI
C
      DATA RDATA /0.0/
C
      RTRAC1= BARWID
      RTRAC2= BOFSET
      IF (IPRINT.EQ.1) CALL G0MESG(172,2)
C
C          AUTOMATIC MAPPING IS DONE FOR THE GIVEN VALUES.
C          THE CURRENT PLOTTING POSITION IS SAVED, THE
C          HISTOGRAM IS DRAWN, THEN THE POSITION IS RESTORED.
C
      IF (ISTOP.LT.ISTART) RETURN
C
      BAUTO(1)= BARPOS(ISTART)-BARWID*0.5
      IF (BOFSET.LT.0.0) BAUTO(1)= BAUTO(1)+(NOSETS-1)*BOFSET
C
      BAUTO(2)= BARPOS(ISTOP)+BARWID*0.5
      IF (BOFSET.GT.0.0) BAUTO(2)= BAUTO(2)+(NOSETS-1)*BOFSET
C
      VAUTO(1)= BASPOS
      VAUTO(2)= BASPOS
C
      DO 100 ISTCNT= 1,NOSETS
        IF (ISTCNT.GT.100) GO TO 1
        IF (INFLGS(ISTCNT).EQ.0) GO TO 100
C
    1   DO 200 IBRCNT= ISTART,ISTOP
          VAL= VALSTS(IBRCNT,ISTCNT)
          IF (VAL.GT.VAUTO(2)) VAUTO(2)= VAL
  200   CONTINUE
  100 CONTINUE
C
      IF (ABS(BAUTO(2)-BAUTO(1)).LT.RMINI.OR.
     &    ABS(VAUTO(2)-VAUTO(1)).LT.RMINI) RETURN
      IF (IBRTYP.EQ.0) CALL G0AUTO(BAUTO,VAUTO,1,2,1,2,1)
      IF (IBRTYP.NE.0) CALL G0AUTO(VAUTO,BAUTO,1,2,1,2,1)
C
      XHERE= XPLOT0
      YHERE= YPLOT0
      ACTWID= SIGN(BARWID,BOFSET)
C
      DO 300 IBAR= ISTART,ISTOP
        BRPOS= BARPOS(IBAR)-ACTWID*0.5
        BRPOS1= BRPOS+ACTWID
        INOPTS= 1
        POINTS(1,1)= BRPOS
        POINTS(1,2)= BASPOS
C
        DO 400 IEASET= 1,NOSETS
          CURVAL= VALSTS(IBAR,IEASET)
          IF (CURVAL.LT.BASPOS) GO TO 400
          IF (IEASET.GT.100) GO TO 2
          IF (INFLGS(IEASET).EQ.0) GO TO 400
C
C        FIND OUT WHERE IT IS IN TABLE.
C
    2     IPOINT= INOPTS+1
C
          DO 500 I= 1,INOPTS
            IF (BOFSET.GE.0.AND.POINTS(I,1).LE.BRPOS) IPOINT= I
            IF (BOFSET.LT.0.AND.POINTS(I,1).GE.BRPOS) IPOINT= I
  500     CONTINUE
C
          IF (BOFSET.GT.BARWID) POINTS(INOPTS,1)= BRPOS
C
          IFROM= 0
          INOPT1= INOPTS-1
          IF (IPOINT.GT.INOPT1) GO TO 3
C
          DO 600 IJOIN= IPOINT,INOPT1
            IF (POINTS(IJOIN,2).GE.CURVAL) GO TO 600
C
            IFROM= IJOIN
            GO TO 3
  600     CONTINUE
C
    3     FILL= .FALSE.
          IF (LENLST.EQ.0) GO TO 5
C
          FILL= .TRUE.
          KOLIND= MOD(IEASET,LENLST)
          IF (KOLIND.EQ.0) KOLIND= LENLST
          IF (LSTCL0(KOLIND).EQ.0) GO TO 400
C
          IDATA(1)= 0
          IF (LSTCL0(KOLIND).LT.0) IDATA(1)= 1
C
          CALL G3LINK(5,13,-1,IDATA,RDATA)
          IDATA(1)= IABS(LSTCL0(KOLIND))
          CALL G3LINK(5,3,-1,IDATA,RDATA)
          GO TO 5
C
    4     FILL= .FALSE.
          CALL G3LINK(5,4,0,IDATA,RDATA)
          IF (IDRBND.NE.0) GO TO 5
          IF (IFROM.EQ.0) GO TO 12
          GO TO 11
C
    5     IF (IBRTYP.EQ.1) GO TO 6
C
          CALL POSITN(BRPOS1,BASPOS)
          CALL JOIN(BRPOS1,CURVAL)
          IF (IFROM.NE.0) GO TO 8
C
          CALL JOIN(POINTS(INOPTS,1),CURVAL)
          CALL JOIN(POINTS(INOPTS,1),BASPOS)
          CALL JOIN(BRPOS1,BASPOS)
          GO TO 7
C
    6     CALL POSITN(BASPOS,BRPOS1)
          CALL JOIN(CURVAL,BRPOS1)
          IF (IFROM.NE.0) GO TO 8
C
          CALL JOIN(CURVAL,POINTS(INOPTS,1))
          CALL JOIN(BASPOS,POINTS(INOPTS,1))
          CALL JOIN(BASPOS,BRPOS1)
    7     IF (FILL) GO TO 4
          GO TO 12
C
    8     POS1= BRPOS
          IF (BOFSET.GE.0.AND.POINTS(IFROM,1).GT.BRPOS)
     &                                          POS1= POINTS(IFROM,1)
          IF (BOFSET.LT.0.AND.POINTS(IFROM,1).LT.BRPOS)
     &                                          POS1= POINTS(IFROM,1)
C
          IFROM1= IFROM+1
          IF (IBRTYP.EQ.1) GO TO 9
C
          CALL JOIN(POS1,CURVAL)
          CALL JOIN(POS1,POINTS(IFROM,2))
C
          DO 700 I= IFROM1,INOPTS
            CALL JOIN(POINTS(I,1),POINTS(I-1,2))
            CALL JOIN(POINTS(I,1),POINTS(I,2))
  700     CONTINUE
C
          CALL JOIN(BRPOS1,BASPOS)
          GO TO 10
C
    9     CALL JOIN(CURVAL,POS1)
          CALL JOIN(POINTS(IFROM,2),POS1)
C
          DO 800 I= IFROM1,INOPTS
            CALL JOIN(POINTS(I-1,2),POINTS(I,1))
            CALL JOIN(POINTS(I,2),POINTS(I,1))
  800     CONTINUE
C
          CALL JOIN(BASPOS,BRPOS1)
   10     IF (FILL) GO TO 4
C
   11     POINTS(INOPTS,1)= BRPOS
   12     POINTS(INOPTS,2)= CURVAL
          POINTS(INOPTS+1,1)= BRPOS1
          POINTS(INOPTS+1,2)= BASPOS
          INOPTS= INOPTS+1
          BRPOS= BRPOS+BOFSET
          BRPOS1= BRPOS1+BOFSET
  400   CONTINUE
  300 CONTINUE
C
C        DRAW BASELINE
C
      IF (IDRBND.EQ.0) GO TO 14
      IF (IBRTYP.NE.0) GO TO 13
C
      CALL POSITN(BAUTO(2),BASPOS)
      CALL JOIN(BAUTO(1),BASPOS)
      GO TO 14
C
   13 CALL POSITN(BASPOS,BAUTO(2))
      CALL JOIN(BASPOS,BAUTO(1))
   14 CALL POSITN(XHERE,YHERE)
      RETURN
      END

      SUBROUTINE SURCUT(SURFAS,ISTRTX,ISTOPX,NPTSX,ISTRTY,ISTOPY,NPTSY,
     &                  CLEVLS,ISTRTL,ISTOPL)
C
C          ------------------------------------------------
C          ROUTINE NO. ( 343)   VERSION (A9.1)    18:JUL:95
C          ------------------------------------------------
C
C          THIS PLOTS A SECTION THROUGH A SURFACE.
C
C
C          THE ARGUMENTS ARE AS FOLLOWS:
C
C          [SURFAS]  IS THE ARRAY OF SURFACE HEIGHT VALUES.
C          <ISTRTX>  IS THE LOWER X-EXTENT,
C          <ISTOPX>  IS THE UPPER X-EXTENT, WHILE
C          <ISTRTY>  AND
C          <ISTOPY>  ARE THE CORRESPONDING Y-BOUNDS.
C          <NPTSX>   IS THE ACTUAL ARRAY X-EXTENT, AND
C          <NPTSY>   IS THE ACTUAL ARRAY Y-EXTENT.
C          [CLEVLS]  CONTAINS THE VALUES OF THE CONTOUR HEIGHTS,
C          <ISTRTL>  IS THE STARTING POINT, AND
C          <ISTOPL>  IS THE END POINT OF THIS ARRAY.
C
C
      REAL    SURFAS(NPTSX,NPTSY),CLEVLS(ISTOPL),ARG(2)
      LOGICAL ERRON
C
      COMMON /T0ACON/ ANGCON
      COMMON /T0AUTM/ MAPNUM
      COMMON /T0CANG/ STANG0,CRANG0
      COMMON /T0CDIM/ MAGN0,OBLAT0
      COMMON /T0LATT/ KOLIN0,ITHIK0
      COMMON /T0MACT/ MRKMAP,MRKWIN
      COMMON /T0MAPA/ X1MAPV,X2MAPV,Y1MAPV,Y2MAPV
      COMMON /T0PPOS/ XPLOT0,YPLOT0
      COMMON /T0SAXE/ INDAXE,XAXORG,YAXORG,XAXDEL,YAXDEL
      COMMON /T0SCOL/ LINCUP,LINCLW,LINCBS
      COMMON /T0SDL1/ DELTXR,DELTYR,DELTZR,DELTXC,DELTYC,DELTZC,
     &                VSCALE,ZSCALE,ITPBTM,IQDRNT
      COMMON /T0SSCA/ SHTMIN,SHTMAX,XPTCH
      COMMON /T0TRAC/ IPRINT
      COMMON /T0TRAI/ ITRAC1,ITRAC2,ITRAC3,ITRAC4
      COMMON /T0WNDO/ X1WND0,X2WND0,Y1WND0,Y2WND0
      COMMON /T3ERRS/ ERRON,NUMERR
      COMMON /T3LIMS/ IMAXI,RMAXI,RMINI
C
      DATA ARG /0.0,1.0/
C
C
      ITRAC1= ISTRTX
      ITRAC2= ISTOPX
      ITRAC3= ISTRTY
      ITRAC4= ISTOPY
      IF (IPRINT.EQ.1) CALL G0MESG(191,8)
C
      ILENX= ISTOPX-ISTRTX
      ILENY= ISTOPY-ISTRTY
      IALENX= IABS(ILENX)
      IALENY= IABS(ILENY)
      IF (IALENX.NE.0) THEN
        ISIN= ILENX/IALENX
      ELSE
        ISIN= 1
      ENDIF
C
      IF (IALENY.NE.0) THEN
        JSIN= ILENY/IALENY
      ELSE
        JSIN= 1
      ENDIF
C
      XLEN= IALENX
      YLEN= IALENY
      IF (ISTRTX.LT.1.OR.ISTRTY.LT.1)         GO TO 901
      IF (ISTOPX.LT.1.OR.ISTOPY.LT.1)         GO TO 901
      IF (ISTRTX.GT.NPTSX.OR.ISTRTY.GT.NPTSY) GO TO 901
      IF (ISTOPX.GT.NPTSX.OR.ISTOPY.GT.NPTSY) GO TO 901
      IF (ILENX.EQ.0.AND.ILENY.EQ.0)          GO TO 901
      IF (ISTRTL.LT.1.OR.ISTRTL.GT.ISTOPL)    RETURN
      IF (ISTRTL.LT.ISTOPL) THEN
C
        DO 100 I= ISTRTL,ISTOPL-1
          IF (CLEVLS(I).GE.CLEVLS(I+1))       GO TO 902
  100   CONTINUE
C
      ENDIF
C
      LINSAV= KOLIN0
      NUMSAV= MAPNUM
      MAGSAV= MAGN0
      STANSV= STANG0
      CRANSV= CRANG0
      OBLSAV= OBLAT0
      CALL LINCOL(LINCUP)
      CALL CTRANG(0.0)
      CALL CTRORI(0.0)
      CALL CTROBL(1.0)
      IPRSAV= IPRINT
      IPRINT=0
      CALL G0AUTO(ARG,ARG,1,2,1,2,1)
      XPSAV= XPLOT0
      YPSAV= YPLOT0
      X1MSAV= X1MAPV
      X2MSAV= X2MAPV
      Y1MSAV= Y1MAPV
      Y2MSAV= Y2MAPV
      X1WSAV= X1WND0
      X2WSAV= X2WND0
      Y1WSAV= Y1WND0
      Y2WSAV= Y2WND0
      MRKSAV= MRKWIN
C
C          THE NEXT SECTION SCANS SURFAS FOR MINIMUM AND
C          MAXIMUM HEIGHTS IF THESE HAVE NOT BEEN SPECIFIED.
C
      SURMIN= SHTMIN
      SURMAX= SHTMAX
      IF (ABS(SHTMAX-SHTMIN).GT.RMINI) GO TO 1
C
      SURMAX= SURFAS(ISTRTX,ISTRTY)
      SURMIN= SURMAX
C
      DO 200 J= ISTRTY,ISTOPY,JSIN
        DO 200 I= ISTRTX,ISTOPX,ISIN
          HT= SURFAS(I,J)
          IF (HT.GT.SURMAX) SURMAX= HT
          IF (HT.LT.SURMIN) SURMIN= HT
  200 CONTINUE
C
      IF (ABS(SURMAX-SURMIN).LE.RMINI) RETURN
C
    1 YSCALE= 1.0/(SURMAX-SURMIN)
C
C          REMAP SO THAT THE ORIGINAL WINDOW AREA IS USED
C          WITH A MAPPING OF 0.0 TO 1.0.
C
      DIFF= X2WND0-X1WND0
      IF (ABS(DIFF).LT.RMINI) RETURN
C
      XM1= (X1MAPV-X1WND0)/DIFF
      XM2= (X2MAPV-X1WND0)/DIFF
      DIFF= Y2WND0-Y1WND0
      IF (ABS(DIFF).LT.RMINI) RETURN
C
      YM1= (Y1MAPV-Y1WND0)/DIFF
      YM2= (Y2MAPV-Y1WND0)/DIFF
      CALL MAP(XM1,XM2,YM1,YM2)
C
C          ENLARGE THE WINDOW AREA TO ALLOW ANNOTATION
C          AROUND THE EDGE OF THE DRAWING.
C
      CALL WINDOW(-0.5,1.5,-0.5,1.5)
      CALL CTRSIZ(0.01)
C
C          CALCULATE THE XSCALE.
C
      IF (IALENX.GE.IALENY) THEN
        XSCALE= 1.0/XLEN
        LONGXY= 1
        ILENXY= IALENX
        CONVIJ= YLEN/XLEN
      ELSE
        XSCALE= 1.0/YLEN
        LONGXY= 2
        ILENXY= IALENY
        CONVIJ= XLEN/YLEN
      ENDIF
C
C          DRAW THE SECTION.
C
      SURF1= SURFAS(ISTRTX,ISTRTY)
      XPOS1= 0.0
      VALJ1= 0.0
C
      DO 300 I= 1,ILENXY
        XPOS2= I*XSCALE
        VALJ2= I*CONVIJ
        IF (LONGXY.EQ.1) THEN
          IX= ISTRTX+I*ISIN
          IY= ISTRTY+INT(VALJ2)*JSIN
          IX1= IX
          IY1= IY+JSIN
        ELSE
          IX= ISTRTX+INT(VALJ2)*ISIN
          IY= ISTRTY+I*JSIN
          IX1= IX+ISIN
          IY1= IY
        ENDIF
C
        SURFA= SURFAS(IX,IY)
        SURFB= SURFAS(IX1,IY1)
        SURF2= SURFA+(SURFB-SURFA)*MOD(VALJ2,1.0)
        CALL G0SCUT(XPOS1,XPOS2,SURF1,SURF2,YSCALE,SURMIN,
     &              CLEVLS,ISTRTL,ISTOPL)
C
        SURF1= SURF2
        XPOS1= XPOS2
        VALJ1= VALJ2
  300 CONTINUE
C
C          ANNOTATE THE AXES IF REQUIRED.
C
      IF (INDAXE.NE.0) THEN
        CALL POSITN(0.0,1.0)
        CALL JOIN(0.0,0.0)
        CALL JOIN(1.0,0.0)
        CALL JOIN(1.0,1.0)
        CALL POSITN(0.0,-0.04)
        CALL JOIN(1.0,-0.04)
        IF (ILENX.NE.0) CALL PLOTCS(-0.03,-0.02,'X')
        IF (ILENY.NE.0) CALL PLOTCS(-0.03,-0.06,'Y')
C
        DELTXR= 1.0
        DELTYR= 0.0
        DELTXC= 1.0E-20
        DELTYC= 1.0
        VSCALE= 1.0/(SURMAX-SURMIN)
C
C          ANNOTATE THE X AXIS.
C
        IF (INDAXE.EQ.3) THEN
          IF (ILENX.NE.0) THEN
            Y1WND0= XAXORG+(ISTRTX-1)*XAXDEL
            Y2WND0= XAXORG+(ISTOPX-1)*XAXDEL
            AXSCAL= 1.0/(Y2WND0-Y1WND0)
            CALL G0SAX2(2,Y1WND0,0.0,0.0,1.05,-0.02,AXSCAL)
          ENDIF
C
          IF (ILENY.NE.0) THEN
            Y1WND0= YAXORG+(ISTRTY-1)*YAXDEL
            Y2WND0= YAXORG+(ISTOPY-1)*YAXDEL
            AXSCAL= 1.0/(Y2WND0-Y1WND0)
            CALL G0SAX2(2,Y1WND0,0.0,-0.04,1.05,-0.06,AXSCAL)
          ENDIF
C
        ELSE
          IF (ILENX.NE.0) THEN
            Y1WND0= ISTRTX
            Y2WND0= ISTOPX
            AXSCAL= 1.0/(Y2WND0-Y1WND0)
            CALL G0SAX2(4,Y1WND0,0.0,0.0,1.05,-0.02,AXSCAL)
          ENDIF
C
          IF (ILENY.NE.0) THEN
            Y1WND0= ISTRTY
            Y2WND0= ISTOPY
            AXSCAL= 1.0/(Y2WND0-Y1WND0)
            CALL G0SAX2(4,Y1WND0,0.0,-0.04,1.05,-0.06,AXSCAL)
          ENDIF
C
        ENDIF
C
C          ANNOTATE THE VERTICAL AXES.
C
        Y1WND0= SURMIN
        Y2WND0= SURMAX
        CALL G0SAX2(5,SURMIN,0.0,0.0,-0.04,1.1,VSCALE)
        CALL G0SAX2(6,SURMIN,1.0,0.0,0.01,1.1,VSCALE)
        Y1WND0= -0.5
        Y2WND0= 1.5
      ENDIF
C
C          THE ENTRY STATE IS RESTORED BEFORE ENDING.
C
      CALL LINCOL(LINSAV)
      CALL WINFOL
      MAPNUM= NUMSAV
      CALL G0MAPS(X1MSAV,X2MSAV,Y1MSAV,Y2MSAV)
      IF (MRKSAV.NE.0) CALL WINDOW(X1WSAV,X2WSAV,Y1WSAV,Y2WSAV)
C
      CALL POSITN(XPSAV,YPSAV)
      CALL CTRMAG(MAGSAV)
      CALL CTRANG(CRANSV/ANGCON)
      CALL CTRORI(STANSV/ANGCON)
      CALL CTROBL(OBLSAV)
      IPRINT= IPRSAV
      RETURN
C
  901 NUMERR= 47
      IF (ERRON) CALL G0ERMS
      RETURN
C
  902 NUMERR= 54
      IF (ERRON) CALL G0ERMS
      RETURN
C
      END

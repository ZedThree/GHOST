      SUBROUTINE ERRBAR(XPOSNS,YPOSNS,BOUND1,BOUND2,ISTART,ISTOP,
     &                  MARKNO,ICODE)
C
C          ------------------------------------------------
C          ROUTINE NO. (  90)   VERSION (A8.1)    11:JUN:86
C          ------------------------------------------------
C
C          THIS DRAWS A SET OF VALUES WITH THIER ASSOCIATED
C          LOWER AND UPPER ERROR BOUNDS.
C
C          THE ARGUMENTS ARE AS FOLLOWS:
C
C          [XPOSNS] ARE THE X-COORDINATES OF THE POINTS.
C          [YPOSNS] ARE THE Y-COORDINATES OF THE POINTS.
C          [BOUND1] ARE THE ASSOCIATED LOWER ERROR BOUNDS.
C          [BOUND2] ARE THE ASSOCIATED UPPER ERROR BOUNDS.
C          <ISTART> IS THE LOWER BOUNDARY AND
C          <ISTOP>  IS THE UPPER BOUNDARY OF THE ARRAYS.
C          <MARKNO> IS THE GHOST CHARACTER NUMBER OF THE MARKER CHAR,
C                   IF ZERO PREVIOUS CHARACTER IS USED INSTEAD.
C          <ICODE>  INDICATES IF THE ERROR BOUNDS ARE TO BE JOINED
C                   AND THEIR ORIENTATION.
C
      REAL    XPOSNS(ISTOP),YPOSNS(ISTOP),BOUND1(ISTOP),
     &        BOUND2(ISTOP),XAUTO(2),YAUTO(2),RDATA(2)
      INTEGER IDATA(2)
C
      COMMON /T0AARG/ KAXIS
      COMMON /T0APOS/ AXPOSX,AXPOSY
      COMMON /T0ATIK/ TKEN1A,TKEN1B,TKEN2A,TKEN2B
      COMMON /T0MRKS/ MARKC0
      COMMON /T0PPOS/ XPLOT0,YPLOT0
      COMMON /T0TRAC/ IPRINT
      COMMON /T0TRAI/ ITRAC1,ITRAC2,ITRAC3,ITRAC4
      COMMON /T3NBYR/ NBYTR
C
      DATA RDATA /0.0,0.0/
C
C
      ITRAC1= ISTART
      ITRAC2= ISTOP
      ITRAC3= MARKNO
      IF (IPRINT.EQ.1) CALL G0MESG(171,7)
      IF (ISTOP-ISTART.LT.0) RETURN
C
C        THE CURRENT PLOTTING POSITION IS SAVED,AUTOMATIC MAPPING IS
C        DONE IF NEEDED,THE SIZE OF TICK MARKS ARE CALCULATED AS
C        THE GRAPH IS DRAWN AND THE POSITION RESTORED.
C
      XHERE= XPLOT0
      YHERE= YPLOT0
      XAUTO(1)= XPOSNS(ISTART)
      XAUTO(2)= XPOSNS(ISTART)
      YAUTO(1)= YPOSNS(ISTART)
      YAUTO(2)= YPOSNS(ISTART)
C
      DO 100 IBRCNT= ISTART,ISTOP
        IF (XPOSNS(IBRCNT).LT.XAUTO(1)) XAUTO(1)= XPOSNS(IBRCNT)
        IF (XPOSNS(IBRCNT).GT.XAUTO(2)) XAUTO(2)= XPOSNS(IBRCNT)
        IF (YPOSNS(IBRCNT).LT.YAUTO(1)) YAUTO(1)= YPOSNS(IBRCNT)
        IF (YPOSNS(IBRCNT).GT.YAUTO(2)) YAUTO(2)= YPOSNS(IBRCNT)
  100 CONTINUE
C
      IF (ICODE.LE.0) GO TO 1
C
      DO 200 IBRCNT= ISTART,ISTOP
        BOUNDA= YPOSNS(IBRCNT)-BOUND1(IBRCNT)
        BOUNDB= YPOSNS(IBRCNT)+BOUND2(IBRCNT)
        IF (BOUNDA.LT.YAUTO(1)) YAUTO(1)= BOUNDA
        IF (BOUNDA.GT.YAUTO(2)) YAUTO(2)= BOUNDA
        IF (BOUNDB.LT.YAUTO(1)) YAUTO(1)= BOUNDB
        IF (BOUNDB.GT.YAUTO(2)) YAUTO(2)= BOUNDB
  200 CONTINUE
C
      GO TO 2
C
    1 IF (ICODE.EQ.0) GO TO 2
C
      DO 300 IBRCNT= ISTART,ISTOP
        BOUNDA= XPOSNS(IBRCNT)-BOUND1(IBRCNT)
        BOUNDB= XPOSNS(IBRCNT)+BOUND2(IBRCNT)
        IF (BOUNDA.LT.XAUTO(1)) XAUTO(1)= BOUNDA
        IF (BOUNDA.GT.XAUTO(2)) XAUTO(2)= BOUNDA
        IF (BOUNDB.LT.XAUTO(1)) XAUTO(1)= BOUNDB
        IF (BOUNDB.GT.XAUTO(2)) XAUTO(2)= BOUNDB
  300 CONTINUE
C
    2 CALL G0AUTO(XAUTO,YAUTO,1,2,1,2,0)
      KCHAR= IABS(MARKNO)
      IF (KCHAR.EQ.0.OR.KCHAR.GT.255) GO TO 3
C
      MARKC0= KCHAR
      IDATA(1)= KCHAR
      CALL G3LINK(2,9,-1,IDATA,RDATA)
    3 XAPSAV= AXPOSX
      YAPSAV= AXPOSY
C
      DO 400 IBRCNT= ISTART,ISTOP
        RDATA(1)= XPOSNS(IBRCNT)
        RDATA(2)= YPOSNS(IBRCNT)
        CALL G3LINK(0,5,2*NBYTR,IDATA,RDATA)
        IF (ICODE.LE.0) GO TO 5
C
        BOUNDA= YPOSNS(IBRCNT)-BOUND1(IBRCNT)
        BOUNDB= YPOSNS(IBRCNT)+BOUND2(IBRCNT)
        IF (ICODE.GT.1) GO TO 4
C
        CALL POSITN(XPOSNS(IBRCNT),BOUNDA)
        CALL JOIN(XPOSNS(IBRCNT),BOUNDB)
    4   KAXIS= 2
        AXPOSY= XPOSNS(IBRCNT)
        CALL G0TICK
        CALL POSITN(TKEN2A,BOUNDA)
        CALL JOIN(TKEN2B,BOUNDA)
        CALL POSITN(TKEN2A,BOUNDB)
        CALL JOIN(TKEN2B,BOUNDB)
        GO TO 400
C
    5   IF (ICODE.EQ.0) GO TO 400
C
        BOUNDA= XPOSNS(IBRCNT)-BOUND1(IBRCNT)
        BOUNDB= XPOSNS(IBRCNT)+BOUND2(IBRCNT)
        IF (ICODE.LT.-1) GO TO 6
C
        CALL POSITN(BOUNDA,YPOSNS(IBRCNT))
        CALL JOIN(BOUNDB,YPOSNS(IBRCNT))
    6   KAXIS= 1
        AXPOSX= YPOSNS(IBRCNT)
        CALL G0TICK
        CALL POSITN(BOUNDA,TKEN2A)
        CALL JOIN(BOUNDA,TKEN2B)
        CALL POSITN(BOUNDB,TKEN2A)
        CALL JOIN(BOUNDB,TKEN2B)
  400 CONTINUE
C
      AXPOSX= XAPSAV
      AXPOSY= YAPSAV
      CALL POSITN(XHERE,YHERE)
C
      RETURN
      END

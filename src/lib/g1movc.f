      SUBROUTINE G1MOVC(IFUNCO,IREPT)
C
C          ------------------------------------------------
C          ROUTINE NO. (1031)   VERSION (A7.6)    11:FEB:85
C          ------------------------------------------------
C
C          THIS PERFORMS THE CHARACTER CONTROL FUNCTIONS.
C
C
C          THE ARGUMENTS ARE AS FOLLOWS:
C
C          <IFUNCO> DETERMINES THE ACTION:
C                   =  1, A WHOLE SPACE FORWARD IS DONE,
C                   =  2, A HALF SPACE FORWARD IS DONE,
C                   =  3, A WHOLE SPACE BACK IS DONE,
C                   =  4, A HALF SPACE BACK IS DONE,
C                   =  5, A WHOLE LINE FEED IS DONE,
C                   =  6, A HALF LINE FEED IS DONE,
C                   =  7, A WHOLE LINE BACK IS DONE,
C                   =  8, A HALF LINE BACK IS DONE,
C                   =  9, A CARRIAGE RETURN IS DONE,
C                   = 10, A NEW PAGE IS BEGUN.
C          <IREPT>  GIVES THE NO. OF TIMES THIS IS REPEATED.
C
C
      LOGICAL SPACIN,FORWRD
      LOGICAL TYPMOD
C
      COMMON /T1CMOC/ ADDSPX,ADDLNX,ADDSPY,ADDLNY
      COMMON /T1CMOD/ TYPMOD
      COMMON /T1CPOS/ XCHAR,YCHAR
      COMMON /T1TSPA/ X1TYPW,X2TYPW,Y1TYPW,Y2TYPW
      COMMON /T1TYPQ/ IQUAD
C
C
      IF (IFUNCO.LT.1.OR.IFUNCO.GT.10) RETURN
      IF (IREPT.LT.1)                  RETURN
C
      FORWRD= .TRUE.
      GO TO (1,2,3,4,11,12,13,14,20,21), IFUNCO
C
C          THE FOLLOWING SECTIONS INITIALISE FOR FULL-SPACE
C          FORWARD, HALF-SPACE FORWARD, FULL-SPACE BACK AND
C          HALF-SPACE BACK, RESPECTIVELY. THE LOOP THEN DOES
C          THE REQUIRED ACTION <IREPT> TIMES, ALSO CHECKING
C          WHEN IN TYPING MODE TO ENSURE THAT PROPER WRAP-
C          ROUND OCCURS WHEN THE (BORDERED) CHAR. WINDOW IS
C          EXCEEDED. IF THE UPPER OR LOWER PAGE LIMITS ARE
C          ALSO EXCEEDED, A JUMP IS MADE TO LOOP-100 TO
C          ALLOW FOR THIS BEFORE CONTINUING WITH THE SPACES.
C
    1 XINCSP= ADDSPX
      YINCSP= ADDSPY
      GO TO 5
C
    2 XINCSP= 0.5*ADDSPX
      YINCSP= 0.5*ADDSPY
      GO TO 5
C
    3 XINCSP= -ADDSPX
      YINCSP= -ADDSPY
      FORWRD= .FALSE.
      GO TO 5
C
    4 XINCSP= -0.5*ADDSPX
      YINCSP= -0.5*ADDSPY
      FORWRD= .FALSE.
C
    5 IF (TYPMOD) GO TO 6
C
      XCHAR= XCHAR+IREPT*XINCSP
      YCHAR= YCHAR+IREPT*YINCSP
      RETURN
C
    6 ISTEPS= 0
    7   ISTEPS= ISTEPS+1
        IF (ISTEPS.GT.IREPT) RETURN
C
        XCHAR= XCHAR+XINCSP
        YCHAR= YCHAR+YINCSP
C
        IF ((IQUAD.EQ.1.OR.IQUAD.EQ.3).AND.
     &      ((XCHAR-X1TYPW)*(XCHAR-X2TYPW).GT.0.0)) GO TO 8
        IF ((IQUAD.EQ.2.OR.IQUAD.EQ.4).AND.
     &      ((YCHAR-Y1TYPW)*(YCHAR-Y2TYPW).GT.0.0)) GO TO 8
        GO TO 7
C
    8   IF (.NOT.FORWRD) GO TO 9
        XINCLN= ADDLNX
        YINCLN= ADDLNY
        IF (IQUAD.EQ.1) XCHAR= X1TYPW+0.0001
        IF (IQUAD.EQ.2) YCHAR= Y1TYPW+0.0001
        IF (IQUAD.EQ.3) XCHAR= X2TYPW-0.0001
        IF (IQUAD.EQ.4) YCHAR= Y2TYPW-0.0001
        GO TO 10
C
    9   XINCLN= -ADDLNX
        YINCLN= -ADDLNY
        IF (IQUAD.EQ.1) XCHAR= X2TYPW-0.0001
        IF (IQUAD.EQ.2) YCHAR= Y2TYPW-0.0001
        IF (IQUAD.EQ.3) XCHAR= X1TYPW+0.0001
        IF (IQUAD.EQ.4) YCHAR= Y1TYPW+0.0001
C
   10   IREPTL= 1
        SPACIN= .TRUE.
        GO TO 17
C
C          THE FOLLOWING SECTIONS PERFORM THE SAME FUNCTIONS FOR
C          FULL LINEFEEDS, HALF LINEFEEDS, FULL BACK LINES AND
C          HALF BACK LINES RESP., REPEATING THE ACTION EITHER
C          <IREPT> TIMES OR ONCE DEPENDING ON THE ORIGIN OF THE
C          ACTION. IF A PAGE OVERFLOW IS BEING CORRECTED AS A
C          RESULT OF A LINE OVERFLOW, CONTROL RETURNS TO LABEL-7.
C          LINE OVERFLOW CANNOT RESULT FROM A PAGE OVERFLOW, SO
C          EQUIVALENT USE OF THE PREVIOUS SECTION IS NOT NEEDED.
C
   11 XINCLN= ADDLNX
      YINCLN= ADDLNY
      GO TO 15
C
   12 XINCLN= 0.5*ADDLNX
      YINCLN= 0.5*ADDLNY
      GO TO 15
C
   13 XINCLN= -ADDLNX
      YINCLN= -ADDLNY
      FORWRD= .FALSE.
      GO TO 15
C
   14 XINCLN= -0.5*ADDLNX
      YINCLN= -0.5*ADDLNY
      FORWRD= .FALSE.
C
   15 IF (TYPMOD) GO TO 16
C
      XCHAR= XCHAR+IREPT*XINCLN
      YCHAR= YCHAR+IREPT*YINCLN
      RETURN
C
   16 IREPTL= IREPT
      SPACIN= .FALSE.
   17 DO 100 ISTEPL= 1,IREPTL
        XCHAR= XCHAR+XINCLN
        YCHAR= YCHAR+YINCLN
C
        IF ((IQUAD.EQ.2.OR.IQUAD.EQ.4).AND.
     &      ((XCHAR-X1TYPW)*(XCHAR-X2TYPW).GT.0.0)) GO TO 18
        IF ((IQUAD.EQ.1.OR.IQUAD.EQ.3).AND.
     &      ((YCHAR-Y1TYPW)*(YCHAR-Y2TYPW).GT.0.0)) GO TO 18
        GO TO 100
C
   18   IF (.NOT.FORWRD) GO TO 19
        IF (IQUAD.EQ.1) YCHAR= Y2TYPW-0.0001
        IF (IQUAD.EQ.2) XCHAR= X1TYPW+0.0001
        IF (IQUAD.EQ.3) YCHAR= Y1TYPW+0.0001
        IF (IQUAD.EQ.4) XCHAR= X2TYPW-0.0001
        GO TO 100
C
   19   IF (IQUAD.EQ.1) YCHAR= Y1TYPW+0.0001
        IF (IQUAD.EQ.2) XCHAR= X2TYPW-0.0001
        IF (IQUAD.EQ.3) YCHAR= Y2TYPW-0.0001
        IF (IQUAD.EQ.4) XCHAR= X1TYPW+0.0001
  100 CONTINUE
      IF (SPACIN) GO TO 7
      RETURN
C
C          THIS SECTION DOES A CARRIAGE RETURN (IE. RESETS
C          THE CHARACTER POSITION TO THE APPROPRIATE MARGIN)
C          PROVIDED THAT TYPING MODE IS CURRENTLY IN EFFECT.
C
   20 IF (.NOT.TYPMOD) RETURN
C
      IF (IQUAD.EQ.1) XCHAR= X1TYPW+0.0001
      IF (IQUAD.EQ.2) YCHAR= Y1TYPW+0.0001
      IF (IQUAD.EQ.3) XCHAR= X2TYPW-0.0001
      IF (IQUAD.EQ.4) YCHAR= Y2TYPW-0.0001
      RETURN
C
C          WHEN TYPING MODE IS SET, THIS SECTION WILL DO
C          A PAGE RESET BY RELOCATING THE CHAR. POSITION
C          TO THE TOP-LEFT CORNER OF THE CHARACTER SPACE.
C
   21 IF (.NOT.TYPMOD) RETURN
C
      IF (IQUAD.NE.1) GO TO 22
      XCHAR= X1TYPW+0.0001
      YCHAR= Y2TYPW-0.0001
      RETURN
C
   22 IF (IQUAD.NE.2) GO TO 23
      XCHAR= X1TYPW+0.0001
      YCHAR= Y1TYPW+0.0001
      RETURN
C
   23 IF (IQUAD.NE.3) GO TO 24
      XCHAR= X2TYPW-0.0001
      YCHAR= Y1TYPW+0.0001
      RETURN
C
   24 XCHAR= X2TYPW-0.0001
      YCHAR= Y2TYPW-0.0001
      RETURN
      END

      SUBROUTINE BR3LBL(CLABLS,ISTRTC,ISTOPC,NCLBLS,RLABLS,ISTRTR,
     &                  ISTOPR,NRLBLS)
C
C          ------------------------------------------------
C          ROUTINE NO. (  50)   VERSION (A8.1)    21:NOV:90
C                         === FORTRAN-77 ===
C          ------------------------------------------------
C
C          THIS DRAWS LABELS ON A 3-D BARCHART.
C
C          THE ARGUMENTS ARE AS FOLLOWS:
C
C          [CLABLS] CONTAINS THE LABELS FOR THE COLUMNS.
C          <ISTRTC> IS THE FIRST COLUMN LABEL TO BE USED.
C          <ISTOPC> IS THE LAST COLUMN LABEL TO BE USED.
C          <NCLBLS> IS THE NUMBER OF COLUMN LABELS.
C          [RLABLS] CONTAINS THE LABELS FOR THE ROWS.
C          <ISTRTR> IS THE FIRST ROW LABEL TO BE USED.
C          <ISTOPR> IS THE LAST ROW LABEL TO BE USED.
C          <NRLBLS> IS THE NUMBER OF ROW LABELS.
C
C
      LOGICAL   ERRON
      CHARACTER CLABLS(NCLBLS)*(*),RLABLS(NRLBLS)*(*)
C
      COMMON /T0ACON/ ANGCON
      COMMON /T0AUTM/ MAPNUM
      COMMON /T0BANG/ B3ANG
      COMMON /T0BASP/ SIZRAT
      COMMON /T0CANG/ STANG0,CRANG0
      COMMON /T0MACT/ MRKMAP,MRKWIN
      COMMON /T0MAPA/ X1MAPV,X2MAPV,Y1MAPV,Y2MAPV
      COMMON /T0MAPP/ X1MAP0,X2MAP0,Y1MAP0,Y2MAP0
      COMMON /T0PPOS/ XPLOT0,YPLOT0
      COMMON /T0TRAC/ IPRINT
      COMMON /T0WNDO/ X1WND0,X2WND0,Y1WND0,Y2WND0
      COMMON /T3ERRS/ ERRON,NUMERR
      COMMON /T3LIMS/ IMAXI,RMAXI,RMINI
      COMMON /T3MACH/ NMCHI,NBITMC
      COMMON /T3SPAC/ ISPACE(1)
C
C
      CALL G3INIT(2)
      IF (IPRINT.EQ.1) CALL G0MESG(187,0)
C
      XLEN= ISTOPC-ISTRTC+SIZRAT
      YLEN= ISTOPR-ISTRTR+SIZRAT
      IF (ISTRTC.LT.1.OR.ISTRTR.LT.1)         GO TO 901
      IF (ISTOPC.GT.NCLBLS.OR.ISTOPR.GT.NRLBLS) GO TO 901
C
      UNSAVE= ANGCON
      ANGCON= 1.0
      ANGSAV= STANG0
      NUMSAV= MAPNUM
      IPRSAV= IPRINT
      IPRINT= 0
      XPSAV= XPLOT0
      YPSAV= YPLOT0
      X1MSAV= X1MAPV
      X2MSAV= X2MAPV
      Y1MSAV= Y1MAPV
      Y2MSAV= Y2MAPV
      X1WSAV= X1WND0
      X2WSAV= X2WND0
      Y1WSAV= Y1WND0
      Y2WSAV= Y2WND0
      MRKSAV= MRKWIN
      DIFF= X2WND0-X1WND0
      IF (ABS(DIFF).LT.RMINI) RETURN
C
      XM1= (X1MAPV-X1WND0)/DIFF
      XM2= (X2MAPV-X1WND0)/DIFF
      DIFF= Y2WND0-Y1WND0
      IF (ABS(DIFF).LT.RMINI) RETURN
C
      YM1= (Y1MAPV-Y1WND0)/DIFF
      YM2= (Y2MAPV-Y1WND0)/DIFF
      CALL MAP(XM1,XM2,YM1,YM2)
      CALL WINDOW(-0.5,1.5,-0.5,1.5)
C
C          CALCULATE SUITABLE BAR WIDTH.
C
      ANGLE= ATAN(SIN(B3ANG)*(Y2MAP0-Y1MAP0)/
     &           (COS(B3ANG)*(X2MAP0-X1MAP0)))
      SBRANG= SIN(ANGLE)
      CBRANG= COS(ANGLE)
      COSASQ= CBRANG*CBRANG
      COSINA= CBRANG*SBRANG
      SIZE= 1.0/(XLEN+COSASQ*YLEN)
      BRSIZE= SIZE*SIZRAT
      XSTRT= SIZE*XLEN
C
C          DRAW THE X-AXIS LABELS.
C
      CALL CTRORI(0.7)
      XPOS= XSTRT
      IF (ISTOPC.LT.ISTRTC) GO TO 1
C
      DO 100 IBAR= ISTOPC,ISTRTC,-1
        CALL POSITN(XPOS,0.0)
        CALL SPACE(-2)
        CALL TCSEND(CLABLS(IBAR))
        XPOS= XPOS-SIZE
  100 CONTINUE
C
C          DRAW THE Y-AXIS LABELS.
C
    1 CALL CTRORI(0.0)
      XPOS= XSTRT+BRSIZE*COSASQ*0.25
      YPOS= BRSIZE*COSINA*0.25
      IF (ISTOPR.LT.ISTRTR) GO TO 2
C
      DO 200 IBAR= ISTRTR,ISTOPR
        CALL POSITN(XPOS,YPOS)
        CALL SPACE(3)
        CALL TYPECS(RLABLS(IBAR))
        XPOS= XPOS+SIZE*COSASQ
        YPOS= YPOS+SIZE*COSINA
  200 CONTINUE
C
C          THE ENTRY STATE IS RESTORED BEFORE RETURNING
C
    2 CALL WINFOL
      MAPNUM= NUMSAV
      CALL G0MAPS(X1MSAV,X2MSAV,Y1MSAV,Y2MSAV)
      IF (MRKSAV.NE.0) CALL WINDOW(X1WSAV,X2WSAV,Y1WSAV,Y2WSAV)
C
      CALL POSITN(XPSAV,YPSAV)
      CALL CTRORI(ANGSAV)
      ANGCON= UNSAVE
      IPRINT= IPRSAV
C
      RETURN
C
  901 NUMERR= 23
      IF (ERRON) CALL G0ERMS
      RETURN
      END

      SUBROUTINE G0INTR(ICODE,XINT,YINT)
C
C          ------------------------------------------------
C          ROUTINE NO. (  47)   VERSION (A8.1)    07:MAY:92
C          ------------------------------------------------
C
C          THIS ROUTINE FINDS ANY INTERSECTION BETWEEN TWO
C          LINE SEGMENTS.
C
C          THE ARGUMENTS ARE AS FOLLOWS:
C
C          <ICODE>  IS A RETURNED VALUE INDICATING AS FOLLOWS :
C                   0 : NO INTERSECT IN LINE SEGMENTS,
C                   1 : LINES INTERSECT AT (XINT,YINT),
C          <XINT>   X COORDINATE OF INTERSECTION (IF ANY).
C          <YINT>   Y COORDINATE OF INTERSECTION (IF ANY).
C
C          THE VALUES IMPORTED ARE :
C
C          [XLINE1] ARRAY CONTAINING COORDINATES OF TWO END
C                   POINTS OF FIRST LINE.
C          [XLINE2] ARRAY CONTAINING COORDINATES OF TWO END
C                   POINTS OF SECOND LINE.
C
      COMMON /T0INTS/ XLINE1(2),YLINE1(2),XLINE2(2),YLINE2(2)
      COMMON /T3LIMS/ IMAXI,RMAXI,RMINI
C
C
C          CALCULATE GRADIENTS, IF PARALLEL CHECK FOR COINCIDENCE,
C          ELSE FIND INTERSECTION AND CHECK IF INTERSECT LIES ON
C          BOTH LINE SEGMENTS.
C
      ICODE= 0
      IF (ABS(XLINE1(2)-XLINE1(1)).LT.RMINI) GO TO 1
C
      SLOPE1= (YLINE1(2)-YLINE1(1))/(XLINE1(2)-XLINE1(1))
      IF (ABS(XLINE2(2)-XLINE2(1)).LT.RMINI) GO TO 2
C
      SLOPE2= (YLINE2(2)-YLINE2(1))/(XLINE2(2)-XLINE2(1))
      SLOPDF= SLOPE1-SLOPE2
      IF (ABS(SLOPDF).LT.RMINI) GO TO 6
      IF (ABS(YLINE1(2)-YLINE1(1)).LT.RMINI) GO TO 3
      IF (ABS(YLINE2(2)-YLINE2(1)).LT.RMINI) GO TO 4
C
      XINT= (SLOPE1*XLINE1(1)-YLINE1(1)-SLOPE2*XLINE2(1)+YLINE2(1))
     &     /SLOPDF
      YINT= SLOPE1*(XINT-XLINE1(1))+YLINE1(1)
      GO TO 5
C
C          FIRST LINE VERTICAL
C
    1 IF (ABS(XLINE2(2)-XLINE2(1)).LT.RMINI) GO TO 7
C
      XINT= XLINE1(1)
      SLOPE2= (YLINE2(2)-YLINE2(1))/(XLINE2(2)-XLINE2(1))
      YINT= SLOPE2*(XINT-XLINE2(1))+YLINE2(1)
      GO TO 5
C
C          SECOND LINE VERTICAL
C
    2 XINT= XLINE2(1)
      YINT= SLOPE1*(XINT-XLINE1(1))+YLINE1(1)
      GO TO 5
C
C          FIRST LINE HORIZONTAL
C
    3 YINT= YLINE1(1)
      XINT= (YINT-YLINE2(1))/SLOPE2+XLINE2(1)
      GO TO 5
C
C          SECOND LINE HORIZONTAL
C
    4 YINT= YLINE2(1)
      XINT= (YINT-YLINE1(1))/SLOPE1+XLINE1(1)
    5 IF (((XINT.LE.XLINE1(1).AND.XINT.GE.XLINE1(2)).OR.
     &     (XINT.GE.XLINE1(1).AND.XINT.LE.XLINE1(2))).AND.
     &    ((XINT.LE.XLINE2(1).AND.XINT.GE.XLINE2(2)).OR.
     &     (XINT.GE.XLINE2(1).AND.XINT.LE.XLINE2(2))).AND.
     &    ((YINT.LE.YLINE1(1).AND.YINT.GE.YLINE1(2)).OR.
     &     (YINT.GE.YLINE1(1).AND.YINT.LE.YLINE1(2))).AND.
     &    ((YINT.LE.YLINE2(1).AND.YINT.GE.YLINE2(2)).OR.
     &     (YINT.GE.YLINE2(1).AND.YINT.LE.YLINE2(2)))) ICODE= 1
      RETURN
C
C          LINES PARALLEL
C
    6 YT1= SLOPE1*(XLINE2(1)-XLINE1(1))+YLINE1(1)
      YT2= SLOPE2*(XLINE1(1)-XLINE2(1))+YLINE2(1)
C
C          ARE LINES PARALLEL AND COINCIDENT ?
C
      IF (ABS(YLINE2(1)-YT1).GE.RMINI.AND.
     &    ABS(YLINE1(1)-YT2).GE.RMINI) RETURN
      IF (XLINE1(1).LT.XLINE2(1).AND.XLINE1(2).GT.XLINE2(1)) GO TO 8
      IF (XLINE1(1).GT.XLINE2(1).AND.XLINE1(2).LT.XLINE2(1)) GO TO 8
      IF (XLINE1(1).LT.XLINE2(2).AND.XLINE1(2).GT.XLINE2(2)) GO TO 9
      IF (XLINE1(1).GT.XLINE2(2).AND.XLINE1(2).LT.XLINE2(2)) GO TO 9
      RETURN
C
C          BOTH LINES VERTICAL AND COINCIDENT ?
C
    7 IF (ABS(XLINE2(1)-XLINE1(1)).GE.RMINI) RETURN
      IF (YLINE1(1).LT.YLINE2(1).AND.YLINE1(2).GT.YLINE2(1)) GO TO 8
      IF (YLINE1(1).GT.YLINE2(1).AND.YLINE1(2).LT.YLINE2(1)) GO TO 8
      IF (YLINE1(1).LT.YLINE2(2).AND.YLINE1(2).GT.YLINE2(2)) GO TO 9
      IF (YLINE1(1).GT.YLINE2(2).AND.YLINE1(2).LT.YLINE2(2)) GO TO 9
      RETURN
C
C          FIRST POINT LIES WITHIN LINE.
C
    8 XINT= XLINE2(1)
      YINT= YLINE2(1)
      GO TO 10
C
C          SECOND POINT LIES WITHIN LINE.
C
    9 XINT= XLINE2(2)
      YINT= YLINE2(2)
   10 ICODE= 1
      RETURN
      END
